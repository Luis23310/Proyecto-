

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Nov 26 04:08:30 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 09/04/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0088                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0094                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001D                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0086                     	;# 
   220  0087                     	;# 
   221  0088                     	;# 
   222  0089                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0093                     	;# 
   229  0094                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242                           
   243                           	psect	strings
   244  0003                     __pstrings:
   245  0003                     stringtab:
   246  0003                     __stringtab:
   247                           
   248                           ;	String table - string pointers are 1 byte each
   249  0003  1BFF               	btfsc	btemp+1,7
   250  0004  280D               	ljmp	stringcode
   251  0005  1383               	bcf	3,7
   252  0006  187F               	btfsc	btemp+1,0
   253  0007  1783               	bsf	3,7
   254  0008  0800               	movf	0,w
   255  0009  0A84               	incf	4,f
   256  000A  1903               	skipnz
   257  000B  0AFF               	incf	btemp+1,f
   258  000C  0008               	return
   259  000D                     stringcode:
   260  000D                     stringdir:
   261  000D  3000               	movlw	high stringdir
   262  000E  008A               	movwf	10
   263  000F  0804               	movf	4,w
   264  0010  0A84               	incf	4,f
   265  0011  0782               	addwf	2,f
   266  0012                     __stringbase:
   267  0012  3400               	retlw	0
   268  0013                     __end_of__stringtab:
   269  0013                     _dpowers:
   270  0013  3401               	retlw	1
   271  0014  3400               	retlw	0
   272  0015  340A               	retlw	10
   273  0016  3400               	retlw	0
   274  0017  3464               	retlw	100
   275  0018  3400               	retlw	0
   276  0019  34E8               	retlw	232
   277  001A  3403               	retlw	3
   278  001B  3410               	retlw	16
   279  001C  3427               	retlw	39
   280  001D                     __end_of_dpowers:
   281  0007                     _PORTCbits	set	7
   282  001E                     _ADRESH	set	30
   283  001F                     _ADCON0bits	set	31
   284  001F                     _ADCON0	set	31
   285  0006                     _PORTBbits	set	6
   286  0008                     _PORTDbits	set	8
   287  0087                     _TRISCbits	set	135
   288  009E                     _ADRESL	set	158
   289  0088                     _TRISD	set	136
   290  0086                     _TRISB	set	134
   291  009F                     _ADCON1	set	159
   292  040F                     _nRBPU	set	1039
   293  001D                     STR_11:
   294  001D  3454               	retlw	84	;'T'
   295  001E  3445               	retlw	69	;'E'
   296  001F  344D               	retlw	77	;'M'
   297  0020  3450               	retlw	80	;'P'
   298  0021  3445               	retlw	69	;'E'
   299  0022  3452               	retlw	82	;'R'
   300  0023  3441               	retlw	65	;'A'
   301  0024  3454               	retlw	84	;'T'
   302  0025  3455               	retlw	85	;'U'
   303  0026  3452               	retlw	82	;'R'
   304  0027  3441               	retlw	65	;'A'
   305  0028  343A               	retlw	58	;':'
   306  0029  3420               	retlw	32	;' '
   307  002A  3400               	retlw	0
   308  002B                     STR_1:
   309  002B  3444               	retlw	68	;'D'
   310  002C  3449               	retlw	73	;'I'
   311  002D  3447               	retlw	71	;'G'
   312  002E  3449               	retlw	73	;'I'
   313  002F  3454               	retlw	84	;'T'
   314  0030  3441               	retlw	65	;'A'
   315  0031  344C               	retlw	76	;'L'
   316  0032  3445               	retlw	69	;'E'
   317  0033  3453               	retlw	83	;'S'
   318  0034  3420               	retlw	32	;' '
   319  0035  3432               	retlw	50	;'2'
   320  0036  3400               	retlw	0
   321  0037                     STR_10:
   322  0037  3450               	retlw	80	;'P'
   323  0038  3452               	retlw	82	;'R'
   324  0039  344F               	retlw	79	;'O'
   325  003A  3443               	retlw	67	;'C'
   326  003B  3445               	retlw	69	;'E'
   327  003C  3453               	retlw	83	;'S'
   328  003D  344F               	retlw	79	;'O'
   329  003E  3420               	retlw	32	;' '
   330  003F  344F               	retlw	79	;'O'
   331  0040  344B               	retlw	75	;'K'
   332  0041  3400               	retlw	0
   333  0042                     STR_12:
   334  0042  3448               	retlw	72	;'H'
   335  0043  3455               	retlw	85	;'U'
   336  0044  344D               	retlw	77	;'M'
   337  0045  3445               	retlw	69	;'E'
   338  0046  3444               	retlw	68	;'D'
   339  0047  3441               	retlw	65	;'A'
   340  0048  3444               	retlw	68	;'D'
   341  0049  343A               	retlw	58	;':'
   342  004A  3420               	retlw	32	;' '
   343  004B  3400               	retlw	0
   344  004C                     STR_6:
   345  004C  3454               	retlw	84	;'T'
   346  004D  3449               	retlw	73	;'I'
   347  004E  3445               	retlw	69	;'E'
   348  004F  344D               	retlw	77	;'M'
   349  0050  3450               	retlw	80	;'P'
   350  0051  344F               	retlw	79	;'O'
   351  0052  343A               	retlw	58	;':'
   352  0053  3400               	retlw	0
   353  0054                     STR_2:
   354  0054  3448               	retlw	72	;'H'
   355  0055  3441               	retlw	65	;'A'
   356  0056  3452               	retlw	82	;'R'
   357  0057  3449               	retlw	73	;'I'
   358  0058  3454               	retlw	84	;'T'
   359  0059  344F               	retlw	79	;'O'
   360  005A  344C               	retlw	76	;'L'
   361  005B  3400               	retlw	0
   362  005C                     STR_5:
   363  005C  3454               	retlw	84	;'T'
   364  005D  3449               	retlw	73	;'I'
   365  005E  344D               	retlw	77	;'M'
   366  005F  3445               	retlw	69	;'E'
   367  0060  3452               	retlw	82	;'R'
   368  0061  3400               	retlw	0
   369  0062                     STR_7:
   370  0062  3453               	retlw	83	;'S'
   371  0063  3445               	retlw	69	;'E'
   372  0064  3447               	retlw	71	;'G'
   373  0065  3400               	retlw	0
   374  0066                     STR_3:
   375  0066  3425               	retlw	37	;'%'
   376  0067  3469               	retlw	105	;'i'
   377  0068  3400               	retlw	0
   378  0066                     
   379                           	psect	cinit
   380  07F5                     start_initialization:	
   381                           ; #config settings
   382                           
   383  07F5                     __initialization:
   384                           
   385                           ; Clear objects allocated to BANK0
   386  07F5  1383               	bcf	3,7	;select IRP bank0
   387  07F6  3047               	movlw	low __pbssBANK0
   388  07F7  0084               	movwf	4
   389  07F8  306C               	movlw	low (__pbssBANK0+37)
   390  07F9  120A  118A  2071   	fcall	clear_ram0
   391  07FC                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  07FC                     __end_of__initialization:
   395  07FC  0183               	clrf	3
   396  07FD  120A  118A  2E23   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssBANK0
   399  0047                     __pbssBANK0:
   400  0047                     _VOLTAJE:
   401  0047                     	ds	3
   402  004A                     _Boton_Aceptar:
   403  004A                     	ds	2
   404  004C                     _Boton_Decremento:
   405  004C                     	ds	2
   406  004E                     _Boton_Aumento:
   407  004E                     	ds	2
   408  0050                     _TIEMPO:
   409  0050                     	ds	2
   410  0052                     _ESTADO:
   411  0052                     	ds	2
   412  0054                     _SENSOR2:
   413  0054                     	ds	2
   414  0056                     _SENSOR1:
   415  0056                     	ds	2
   416  0058                     _ADC:
   417  0058                     	ds	2
   418  005A                     _TIEM:
   419  005A                     	ds	6
   420  0060                     _SEN2:
   421  0060                     	ds	6
   422  0066                     _SEN1:
   423  0066                     	ds	6
   424                           
   425                           	psect	clrtext
   426  0071                     clear_ram0:	
   427                           ;	Called with FSR containing the base address, and
   428                           ;	W with the last address+1
   429                           
   430  0071  0064               	clrwdt	;clear the watchdog before getting into this loop
   431  0072                     clrloop0:
   432  0072  0180               	clrf	0	;clear RAM location pointed to by FSR
   433  0073  0A84               	incf	4,f	;increment pointer
   434  0074  0604               	xorwf	4,w	;XOR with final address
   435  0075  1903               	btfsc	3,2	;have we reached the end yet?
   436  0076  3400               	retlw	0	;all done for this memory range, return
   437  0077  0604               	xorwf	4,w	;XOR again to restore value
   438  0078  2872               	goto	clrloop0	;do the next byte
   439                           
   440                           	psect	cstackCOMMON
   441  0070                     __pcstackCOMMON:
   442  0070                     ?_Lcd_Init:
   443  0070                     ?_Lcd_Command:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ??_Lcd_Command:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_Lcd_CharCP:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ??_Lcd_CharCP:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_INI:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_main:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?___lwdiv:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?___ftpack:	
   465                           ; 2 bytes @ 0x0
   466                           
   467  0070                     ___lwdiv@divisor:	
   468                           ; 3 bytes @ 0x0
   469                           
   470  0070                     ___ftpack@arg:	
   471                           ; 2 bytes @ 0x0
   472                           
   473                           
   474                           ; 3 bytes @ 0x0
   475  0070                     	ds	2
   476  0072                     Lcd_CharCP@c:
   477  0072                     Lcd_Command@command:	
   478                           ; 1 bytes @ 0x2
   479                           
   480  0072                     ___lwdiv@dividend:	
   481                           ; 1 bytes @ 0x2
   482                           
   483                           
   484                           ; 2 bytes @ 0x2
   485  0072                     	ds	1
   486  0073                     ??_Lcd_Init:
   487  0073                     ?_Lcd_ConstText:	
   488                           ; 1 bytes @ 0x3
   489                           
   490  0073                     Lcd_ConstText@x:	
   491                           ; 1 bytes @ 0x3
   492                           
   493  0073                     ___ftpack@exp:	
   494                           ; 1 bytes @ 0x3
   495                           
   496                           
   497                           ; 1 bytes @ 0x3
   498  0073                     	ds	1
   499  0074                     ??___lwdiv:
   500  0074                     ___ftpack@sign:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0074                     Lcd_ConstText@buffer:	
   504                           ; 1 bytes @ 0x4
   505                           
   506  0074                     ___lwdiv@quotient:	
   507                           ; 2 bytes @ 0x4
   508                           
   509                           
   510                           ; 2 bytes @ 0x4
   511  0074                     	ds	1
   512  0075                     ??___ftpack:
   513  0075                     Lcd_Init@data:	
   514                           ; 1 bytes @ 0x5
   515                           
   516                           
   517                           ; 1 bytes @ 0x5
   518  0075                     	ds	1
   519  0076                     ??_Lcd_ConstText:
   520  0076                     Lcd_ConstText@y:	
   521                           ; 1 bytes @ 0x6
   522                           
   523  0076                     ___lwdiv@counter:	
   524                           ; 1 bytes @ 0x6
   525                           
   526                           
   527                           ; 1 bytes @ 0x6
   528  0076                     	ds	1
   529  0077                     ?___lwmod:
   530  0077                     Lcd_ConstText@data:	
   531                           ; 2 bytes @ 0x7
   532                           
   533  0077                     ___lwmod@divisor:	
   534                           ; 1 bytes @ 0x7
   535                           
   536                           
   537                           ; 2 bytes @ 0x7
   538  0077                     	ds	1
   539  0078                     ??_INI:
   540  0078                     ?___awtoft:	
   541                           ; 1 bytes @ 0x8
   542                           
   543  0078                     ___awtoft@c:	
   544                           ; 3 bytes @ 0x8
   545                           
   546                           
   547                           ; 2 bytes @ 0x8
   548  0078                     	ds	1
   549  0079                     ___lwmod@dividend:
   550                           
   551                           ; 2 bytes @ 0x9
   552  0079                     	ds	2
   553  007B                     ??___awtoft:
   554  007B                     ??___lwmod:	
   555                           ; 1 bytes @ 0xB
   556                           
   557  007B                     ___awtoft@sign:	
   558                           ; 1 bytes @ 0xB
   559                           
   560  007B                     ___lwmod@counter:	
   561                           ; 1 bytes @ 0xB
   562                           
   563                           
   564                           ; 1 bytes @ 0xB
   565  007B                     	ds	1
   566  007C                     ??_search_channel:
   567                           
   568                           ; 1 bytes @ 0xC
   569  007C                     	ds	2
   570                           
   571                           	psect	cstackBANK0
   572  0020                     __pcstackBANK0:
   573  0020                     ?_sprintf:
   574  0020                     ?___ftmul:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0020                     sprintf@f:	
   578                           ; 3 bytes @ 0x0
   579                           
   580  0020                     ___ftmul@f1:	
   581                           ; 1 bytes @ 0x0
   582                           
   583                           
   584                           ; 3 bytes @ 0x0
   585  0020                     	ds	3
   586  0023                     ??_sprintf:
   587  0023                     ___ftmul@f2:	
   588                           ; 1 bytes @ 0x3
   589                           
   590                           
   591                           ; 3 bytes @ 0x3
   592  0023                     	ds	3
   593  0026                     ??___ftmul:
   594  0026                     sprintf@ap:	
   595                           ; 1 bytes @ 0x6
   596                           
   597                           
   598                           ; 1 bytes @ 0x6
   599  0026                     	ds	1
   600  0027                     sprintf@flag:
   601                           
   602                           ; 1 bytes @ 0x7
   603  0027                     	ds	1
   604  0028                     sprintf@prec:
   605                           
   606                           ; 1 bytes @ 0x8
   607  0028                     	ds	1
   608  0029                     ___ftmul@exp:
   609  0029                     sprintf@val:	
   610                           ; 1 bytes @ 0x9
   611                           
   612                           
   613                           ; 2 bytes @ 0x9
   614  0029                     	ds	1
   615  002A                     ___ftmul@f3_as_product:
   616                           
   617                           ; 3 bytes @ 0xA
   618  002A                     	ds	1
   619  002B                     sprintf@sp:
   620                           
   621                           ; 1 bytes @ 0xB
   622  002B                     	ds	1
   623  002C                     sprintf@c:
   624                           
   625                           ; 1 bytes @ 0xC
   626  002C                     	ds	1
   627  002D                     ___ftmul@cntr:
   628                           
   629                           ; 1 bytes @ 0xD
   630  002D                     	ds	1
   631  002E                     ___ftmul@sign:
   632                           
   633                           ; 1 bytes @ 0xE
   634  002E                     	ds	1
   635  002F                     ?___ftdiv:
   636  002F                     ?___fttol:	
   637                           ; 3 bytes @ 0xF
   638                           
   639  002F                     ___ftdiv@f2:	
   640                           ; 4 bytes @ 0xF
   641                           
   642  002F                     ___fttol@f1:	
   643                           ; 3 bytes @ 0xF
   644                           
   645                           
   646                           ; 3 bytes @ 0xF
   647  002F                     	ds	3
   648  0032                     ___ftdiv@f1:
   649                           
   650                           ; 3 bytes @ 0x12
   651  0032                     	ds	1
   652  0033                     ??___fttol:
   653                           
   654                           ; 1 bytes @ 0x13
   655  0033                     	ds	2
   656  0035                     ??___ftdiv:
   657                           
   658                           ; 1 bytes @ 0x15
   659  0035                     	ds	1
   660  0036                     ___fttol@sign1:
   661                           
   662                           ; 1 bytes @ 0x16
   663  0036                     	ds	1
   664  0037                     ___fttol@lval:
   665                           
   666                           ; 4 bytes @ 0x17
   667  0037                     	ds	1
   668  0038                     ___ftdiv@cntr:
   669                           
   670                           ; 1 bytes @ 0x18
   671  0038                     	ds	1
   672  0039                     ___ftdiv@f3:
   673                           
   674                           ; 3 bytes @ 0x19
   675  0039                     	ds	2
   676  003B                     ___fttol@exp1:
   677                           
   678                           ; 1 bytes @ 0x1B
   679  003B                     	ds	1
   680  003C                     ___ftdiv@exp:
   681                           
   682                           ; 1 bytes @ 0x1C
   683  003C                     	ds	1
   684  003D                     ___ftdiv@sign:
   685                           
   686                           ; 1 bytes @ 0x1D
   687  003D                     	ds	1
   688  003E                     ?_search_channel:
   689  003E                     search_channel@channel:	
   690                           ; 1 bytes @ 0x1E
   691                           
   692                           
   693                           ; 2 bytes @ 0x1E
   694  003E                     	ds	2
   695  0040                     ??_main:
   696                           
   697                           ; 1 bytes @ 0x20
   698  0040                     	ds	3
   699  0043                     main@i:
   700                           
   701                           ; 2 bytes @ 0x23
   702  0043                     	ds	2
   703  0045                     main@i_208:
   704                           
   705                           ; 2 bytes @ 0x25
   706  0045                     	ds	2
   707                           
   708                           	psect	maintext
   709  0623                     __pmaintext:	
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 84 in file "MAIN.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  i               2   37[BANK0 ] int 
   720 ;;  i               2   35[BANK0 ] int 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : B00/0
   727 ;;		On exit  : 300/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       4       0       0       0
   732 ;;      Temps:          0       3       0       0       0
   733 ;;      Totals:         0       7       0       0       0
   734 ;;Total ram usage:        7 bytes
   735 ;; Hardware stack levels required when called:    3
   736 ;; This function calls:
   737 ;;		_INI
   738 ;;		_Lcd_Command
   739 ;;		_Lcd_ConstText
   740 ;;		_search_channel
   741 ;;		_sprintf
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _main
   749  0623                     _main:
   750                           
   751                           ;MAIN.c: 86: INI();
   752                           
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   755  0623  120A  158A  2771  120A  118A  	fcall	_INI
   756                           
   757                           ;MAIN.c: 93: switch(ESTADO)
   758  0628  2FC3               	goto	l1779
   759  0629                     l1785:
   760                           
   761                           ;MAIN.c: 98: Lcd_Command(1);
   762  0629  3001               	movlw	1
   763  062A  120A  118A  21F8  120A  118A  	fcall	_Lcd_Command
   764                           
   765                           ;MAIN.c: 99: Lcd_ConstText (1, 1, "TIMER");
   766  062F  01F3               	clrf	Lcd_ConstText@x
   767  0630  0AF3               	incf	Lcd_ConstText@x,f
   768  0631  304A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   769  0632  00F4               	movwf	Lcd_ConstText@buffer
   770  0633  3080               	movlw	128
   771  0634  00F5               	movwf	Lcd_ConstText@buffer+1
   772  0635  3001               	movlw	1
   773  0636  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
   774                           
   775                           ;MAIN.c: 100: Lcd_ConstText (2, 1, "TIEMPO:");
   776  063B  01F3               	clrf	Lcd_ConstText@x
   777  063C  0AF3               	incf	Lcd_ConstText@x,f
   778  063D  303A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   779  063E  00F4               	movwf	Lcd_ConstText@buffer
   780  063F  3080               	movlw	128
   781  0640  00F5               	movwf	Lcd_ConstText@buffer+1
   782  0641  3002               	movlw	2
   783  0642  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
   784                           
   785                           ;MAIN.c: 101: Lcd_ConstText (2, 11, "SEG");
   786  0647  300B               	movlw	11
   787  0648  00FF               	movwf	127
   788  0649  087F               	movf	127,w
   789  064A  00F3               	movwf	Lcd_ConstText@x
   790  064B  3050               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   791  064C  00F4               	movwf	Lcd_ConstText@buffer
   792  064D  3080               	movlw	128
   793  064E  00F5               	movwf	Lcd_ConstText@buffer+1
   794  064F  3002               	movlw	2
   795  0650  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
   796                           
   797                           ;MAIN.c: 102: ESTADO = 1;
   798  0655  3001               	movlw	1
   799  0656  2F09               	goto	L2
   800  0657                     l1795:	
   801                           ;MAIN.c: 103: break;
   802                           
   803                           
   804                           ;MAIN.c: 107: if (Boton_Aumento == 0)
   805  0657  084E               	movf	_Boton_Aumento,w
   806  0658  044F               	iorwf	_Boton_Aumento+1,w
   807  0659  1D03               	btfss	3,2
   808  065A  2EA0               	goto	l1809
   809                           
   810                           ;MAIN.c: 108: {;MAIN.c: 109: _delay((unsigned long)((250)*(20000000/4000.0)));
   811  065B  3007               	movlw	7
   812  065C  1283               	bcf	3,5	;RP0=0, select bank0
   813  065D  1303               	bcf	3,6	;RP1=0, select bank0
   814  065E  00C2               	movwf	??_main+2
   815  065F  3058               	movlw	88
   816  0660  00C1               	movwf	??_main+1
   817  0661  3059               	movlw	89
   818  0662  00C0               	movwf	??_main
   819  0663                     u1757:
   820  0663  0BC0               	decfsz	??_main,f
   821  0664  2E63               	goto	u1757
   822  0665  0BC1               	decfsz	??_main+1,f
   823  0666  2E63               	goto	u1757
   824  0667  0BC2               	decfsz	??_main+2,f
   825  0668  2E63               	goto	u1757
   826                           
   827                           ;MAIN.c: 110: TIEMPO = TIEMPO + 1;
   828  0669  1283               	bcf	3,5	;RP0=0, select bank0
   829  066A  1303               	bcf	3,6	;RP1=0, select bank0
   830  066B  0850               	movf	_TIEMPO,w
   831  066C  3E01               	addlw	1
   832  066D  00D0               	movwf	_TIEMPO
   833  066E  0851               	movf	_TIEMPO+1,w
   834  066F  1803               	skipnc
   835  0670  3E01               	addlw	1
   836  0671  3E00               	addlw	0
   837  0672  00D1               	movwf	_TIEMPO+1
   838                           
   839                           ;MAIN.c: 111: if (TIEMPO > 60)
   840  0673  0851               	movf	_TIEMPO+1,w
   841  0674  3A80               	xorlw	128
   842  0675  00FF               	movwf	127
   843  0676  3080               	movlw	128
   844  0677  027F               	subwf	127,w
   845  0678  1D03               	skipz
   846  0679  2E7C               	goto	u1675
   847  067A  303D               	movlw	61
   848  067B  0250               	subwf	_TIEMPO,w
   849  067C                     u1675:
   850  067C  1C03               	skipc
   851  067D  2E82               	goto	l1805
   852                           
   853                           ;MAIN.c: 112: {;MAIN.c: 113: TIEMPO = 0;
   854  067E  1283               	bcf	3,5	;RP0=0, select bank0
   855  067F  1303               	bcf	3,6	;RP1=0, select bank0
   856  0680  01D0               	clrf	_TIEMPO
   857  0681  01D1               	clrf	_TIEMPO+1
   858  0682                     l1805:
   859                           
   860                           ;MAIN.c: 114: };MAIN.c: 115: sprintf(TIEM, "%i", TIEMPO);
   861  0682  3054               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   862  0683  00FF               	movwf	127
   863  0684  087F               	movf	127,w
   864  0685  1283               	bcf	3,5	;RP0=0, select bank0
   865  0686  1303               	bcf	3,6	;RP1=0, select bank0
   866  0687  00A0               	movwf	sprintf@f
   867  0688  0851               	movf	_TIEMPO+1,w
   868  0689  00A2               	movwf	?_sprintf+2
   869  068A  0850               	movf	_TIEMPO,w
   870  068B  00A1               	movwf	?_sprintf+1
   871  068C  305A               	movlw	(low (_TIEM| 0))& (0+255)
   872  068D  120A  118A  2557  120A  118A  	fcall	_sprintf
   873                           
   874                           ;MAIN.c: 116: Lcd_ConstText (2, 9, TIEM);
   875  0692  3009               	movlw	9
   876  0693  00FF               	movwf	127
   877  0694  087F               	movf	127,w
   878  0695  00F3               	movwf	Lcd_ConstText@x
   879  0696  305A               	movlw	(low (_TIEM| 0))& (0+255)
   880  0697  00F4               	movwf	Lcd_ConstText@buffer
   881  0698  3000               	movlw	0
   882  0699  00F5               	movwf	Lcd_ConstText@buffer+1
   883  069A  3002               	movlw	2
   884  069B  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
   885  06A0                     l1809:
   886                           
   887                           ;MAIN.c: 117: };MAIN.c: 119: if (Boton_Decremento == 0)
   888  06A0  084C               	movf	_Boton_Decremento,w
   889  06A1  044D               	iorwf	_Boton_Decremento+1,w
   890  06A2  1D03               	btfss	3,2
   891  06A3  2EDE               	goto	l1823
   892                           
   893                           ;MAIN.c: 120: {;MAIN.c: 121: _delay((unsigned long)((250)*(20000000/4000.0)));
   894  06A4  3007               	movlw	7
   895  06A5  1283               	bcf	3,5	;RP0=0, select bank0
   896  06A6  1303               	bcf	3,6	;RP1=0, select bank0
   897  06A7  00C2               	movwf	??_main+2
   898  06A8  3058               	movlw	88
   899  06A9  00C1               	movwf	??_main+1
   900  06AA  3059               	movlw	89
   901  06AB  00C0               	movwf	??_main
   902  06AC                     u1767:
   903  06AC  0BC0               	decfsz	??_main,f
   904  06AD  2EAC               	goto	u1767
   905  06AE  0BC1               	decfsz	??_main+1,f
   906  06AF  2EAC               	goto	u1767
   907  06B0  0BC2               	decfsz	??_main+2,f
   908  06B1  2EAC               	goto	u1767
   909                           
   910                           ;MAIN.c: 122: TIEMPO = TIEMPO - 1;
   911  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   912  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   913  06B4  0850               	movf	_TIEMPO,w
   914  06B5  3EFF               	addlw	255
   915  06B6  00D0               	movwf	_TIEMPO
   916  06B7  0851               	movf	_TIEMPO+1,w
   917  06B8  1803               	skipnc
   918  06B9  3E01               	addlw	1
   919  06BA  3EFF               	addlw	255
   920  06BB  00D1               	movwf	_TIEMPO+1
   921                           
   922                           ;MAIN.c: 123: if (TIEMPO < 0)
   923  06BC  1FD1               	btfss	_TIEMPO+1,7
   924  06BD  2EC2               	goto	l1819
   925                           
   926                           ;MAIN.c: 124: {;MAIN.c: 125: TIEMPO = 60;
   927  06BE  303C               	movlw	60
   928  06BF  00D0               	movwf	_TIEMPO
   929  06C0  3000               	movlw	0
   930  06C1  00D1               	movwf	_TIEMPO+1
   931  06C2                     l1819:
   932                           
   933                           ;MAIN.c: 126: };MAIN.c: 127: sprintf(TIEM, "%i", TIEMPO);
   934  06C2  3054               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   935  06C3  00FF               	movwf	127
   936  06C4  087F               	movf	127,w
   937  06C5  00A0               	movwf	sprintf@f
   938  06C6  0851               	movf	_TIEMPO+1,w
   939  06C7  00A2               	movwf	?_sprintf+2
   940  06C8  0850               	movf	_TIEMPO,w
   941  06C9  00A1               	movwf	?_sprintf+1
   942  06CA  305A               	movlw	(low (_TIEM| 0))& (0+255)
   943  06CB  120A  118A  2557  120A  118A  	fcall	_sprintf
   944                           
   945                           ;MAIN.c: 128: Lcd_ConstText (2, 9, TIEM);
   946  06D0  3009               	movlw	9
   947  06D1  00FF               	movwf	127
   948  06D2  087F               	movf	127,w
   949  06D3  00F3               	movwf	Lcd_ConstText@x
   950  06D4  305A               	movlw	(low (_TIEM| 0))& (0+255)
   951  06D5  00F4               	movwf	Lcd_ConstText@buffer
   952  06D6  3000               	movlw	0
   953  06D7  00F5               	movwf	Lcd_ConstText@buffer+1
   954  06D8  3002               	movlw	2
   955  06D9  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
   956  06DE                     l1823:
   957                           
   958                           ;MAIN.c: 129: };MAIN.c: 131: if (Boton_Aceptar == 0)
   959  06DE  084A               	movf	_Boton_Aceptar,w
   960  06DF  044B               	iorwf	_Boton_Aceptar+1,w
   961  06E0  1D03               	btfss	3,2
   962  06E1  2FC3               	goto	l1779
   963                           
   964                           ;MAIN.c: 132: {;MAIN.c: 133: _delay((unsigned long)((250)*(20000000/4000.0)));
   965  06E2  3007               	movlw	7
   966  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   967  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   968  06E5  00C2               	movwf	??_main+2
   969  06E6  3058               	movlw	88
   970  06E7  00C1               	movwf	??_main+1
   971  06E8  3059               	movlw	89
   972  06E9  00C0               	movwf	??_main
   973  06EA                     u1777:
   974  06EA  0BC0               	decfsz	??_main,f
   975  06EB  2EEA               	goto	u1777
   976  06EC  0BC1               	decfsz	??_main+1,f
   977  06ED  2EEA               	goto	u1777
   978  06EE  0BC2               	decfsz	??_main+2,f
   979  06EF  2EEA               	goto	u1777
   980                           
   981                           ;MAIN.c: 134: ESTADO = 2;
   982  06F0  3002               	movlw	2
   983  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   984  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   985  06F3  2F09               	goto	L2
   986  06F4                     l1827:
   987                           
   988                           ;MAIN.c: 141: Lcd_Command(1);
   989  06F4  3001               	movlw	1
   990  06F5  120A  118A  21F8  120A  118A  	fcall	_Lcd_Command
   991                           
   992                           ;MAIN.c: 142: Lcd_ConstText (1, 5, "PROCESO OK");
   993  06FA  3005               	movlw	5
   994  06FB  00FF               	movwf	127
   995  06FC  087F               	movf	127,w
   996  06FD  00F3               	movwf	Lcd_ConstText@x
   997  06FE  3025               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   998  06FF  00F4               	movwf	Lcd_ConstText@buffer
   999  0700  3080               	movlw	128
  1000  0701  00F5               	movwf	Lcd_ConstText@buffer+1
  1001  0702  3001               	movlw	1
  1002  0703  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
  1003                           
  1004                           ;MAIN.c: 143: ESTADO = 3;
  1005  0708  3003               	movlw	3
  1006  0709                     L2:
  1007  0709  00D2               	movwf	_ESTADO
  1008  070A  3000               	movlw	0
  1009  070B  00D3               	movwf	_ESTADO+1
  1010                           
  1011                           ;MAIN.c: 144: break;
  1012  070C  2FC3               	goto	l1779
  1013  070D                     l1833:
  1014                           
  1015                           ;MAIN.c: 148: search_channel(0b01000000);
  1016  070D  3040               	movlw	64
  1017  070E  00BE               	movwf	search_channel@channel
  1018  070F  3000               	movlw	0
  1019  0710  00BF               	movwf	search_channel@channel+1
  1020  0711  120A  118A  2494  120A  118A  	fcall	_search_channel
  1021                           
  1022                           ;MAIN.c: 149: search_channel(0b01001000);
  1023  0716  3048               	movlw	72
  1024  0717  00BE               	movwf	search_channel@channel
  1025  0718  3000               	movlw	0
  1026  0719  00BF               	movwf	search_channel@channel+1
  1027  071A  120A  118A  2494  120A  118A  	fcall	_search_channel
  1028                           
  1029                           ;MAIN.c: 150: Lcd_ConstText (2, 1, "TEMPERATURA: ");
  1030  071F  01F3               	clrf	Lcd_ConstText@x
  1031  0720  0AF3               	incf	Lcd_ConstText@x,f
  1032  0721  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1033  0722  00F4               	movwf	Lcd_ConstText@buffer
  1034  0723  3080               	movlw	128
  1035  0724  00F5               	movwf	Lcd_ConstText@buffer+1
  1036  0725  3002               	movlw	2
  1037  0726  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
  1038                           
  1039                           ;MAIN.c: 151: Lcd_ConstText (2, 15, SEN1);
  1040  072B  300F               	movlw	15
  1041  072C  00FF               	movwf	127
  1042  072D  087F               	movf	127,w
  1043  072E  00F3               	movwf	Lcd_ConstText@x
  1044  072F  3066               	movlw	(low (_SEN1| 0))& (0+255)
  1045  0730  00F4               	movwf	Lcd_ConstText@buffer
  1046  0731  3000               	movlw	0
  1047  0732  00F5               	movwf	Lcd_ConstText@buffer+1
  1048  0733  3002               	movlw	2
  1049  0734  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
  1050                           
  1051                           ;MAIN.c: 152: Lcd_ConstText (3, 1, "HUMEDAD: ");
  1052  0739  01F3               	clrf	Lcd_ConstText@x
  1053  073A  0AF3               	incf	Lcd_ConstText@x,f
  1054  073B  3030               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1055  073C  00F4               	movwf	Lcd_ConstText@buffer
  1056  073D  3080               	movlw	128
  1057  073E  00F5               	movwf	Lcd_ConstText@buffer+1
  1058  073F  3003               	movlw	3
  1059  0740  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
  1060                           
  1061                           ;MAIN.c: 153: Lcd_ConstText (3, 11, SEN2);
  1062  0745  300B               	movlw	11
  1063  0746  00FF               	movwf	127
  1064  0747  087F               	movf	127,w
  1065  0748  00F3               	movwf	Lcd_ConstText@x
  1066  0749  3060               	movlw	(low (_SEN2| 0))& (0+255)
  1067  074A  00F4               	movwf	Lcd_ConstText@buffer
  1068  074B  3000               	movlw	0
  1069  074C  00F5               	movwf	Lcd_ConstText@buffer+1
  1070  074D  3003               	movlw	3
  1071  074E  120A  158A  27B8  120A  118A  	fcall	_Lcd_ConstText
  1072                           
  1073                           ;MAIN.c: 156: if (SENSOR1 >= 30)
  1074  0753  0857               	movf	_SENSOR1+1,w
  1075  0754  3A80               	xorlw	128
  1076  0755  00FF               	movwf	127
  1077  0756  3080               	movlw	128
  1078  0757  027F               	subwf	127,w
  1079  0758  1D03               	skipz
  1080  0759  2F5C               	goto	u1715
  1081  075A  301E               	movlw	30
  1082  075B  0256               	subwf	_SENSOR1,w
  1083  075C                     u1715:
  1084  075C  1C03               	skipc
  1085  075D  2F8A               	goto	l1843
  1086                           
  1087                           ;MAIN.c: 157: {;MAIN.c: 158: PORTDbits.RD0 = 1;
  1088  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1089  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0760  1408               	bsf	8,0	;volatile
  1091                           
  1092                           ;MAIN.c: 159: for (int i = 0; i < TIEMPO; i++)
  1093  0761  01C3               	clrf	main@i
  1094  0762  01C4               	clrf	main@i+1
  1095  0763                     l83:
  1096  0763  0844               	movf	main@i+1,w
  1097  0764  3A80               	xorlw	128
  1098  0765  00C0               	movwf	??_main
  1099  0766  0851               	movf	_TIEMPO+1,w
  1100  0767  3A80               	xorlw	128
  1101  0768  0240               	subwf	??_main,w
  1102  0769  1D03               	skipz
  1103  076A  2F6D               	goto	u1725
  1104  076B  0850               	movf	_TIEMPO,w
  1105  076C  0243               	subwf	main@i,w
  1106  076D                     u1725:
  1107  076D  1803               	btfsc	3,0
  1108  076E  2F87               	goto	l85
  1109                           
  1110                           ;MAIN.c: 160: {;MAIN.c: 161: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1111  076F  301A               	movlw	26
  1112  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0772  00C2               	movwf	??_main+2
  1115  0773  305E               	movlw	94
  1116  0774  00C1               	movwf	??_main+1
  1117  0775  306D               	movlw	109
  1118  0776  00C0               	movwf	??_main
  1119  0777                     u1787:
  1120  0777  0BC0               	decfsz	??_main,f
  1121  0778  2F77               	goto	u1787
  1122  0779  0BC1               	decfsz	??_main+1,f
  1123  077A  2F77               	goto	u1787
  1124  077B  0BC2               	decfsz	??_main+2,f
  1125  077C  2F77               	goto	u1787
  1126  077D  2F7E               	nop2
  1127  077E  3001               	movlw	1
  1128  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0781  07C3               	addwf	main@i,f
  1131  0782  1803               	skipnc
  1132  0783  0AC4               	incf	main@i+1,f
  1133  0784  3000               	movlw	0
  1134  0785  07C4               	addwf	main@i+1,f
  1135  0786  2F63               	goto	l83
  1136  0787                     l85:
  1137                           
  1138                           ;MAIN.c: 162: };MAIN.c: 163: PORTDbits.RD0 = 0;
  1139  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0789  1008               	bcf	8,0	;volatile
  1142  078A                     l1843:
  1143                           
  1144                           ;MAIN.c: 164: };MAIN.c: 166: if (SENSOR2 <= 30)
  1145  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1146  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1147  078C  0855               	movf	_SENSOR2+1,w
  1148  078D  3A80               	xorlw	128
  1149  078E  00FF               	movwf	127
  1150  078F  3080               	movlw	128
  1151  0790  027F               	subwf	127,w
  1152  0791  1D03               	skipz
  1153  0792  2F95               	goto	u1735
  1154  0793  301F               	movlw	31
  1155  0794  0254               	subwf	_SENSOR2,w
  1156  0795                     u1735:
  1157  0795  1803               	skipnc
  1158  0796  2FC3               	goto	l1779
  1159                           
  1160                           ;MAIN.c: 167: {;MAIN.c: 168: PORTDbits.RD0 = 1;
  1161  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0799  1408               	bsf	8,0	;volatile
  1164                           
  1165                           ;MAIN.c: 169: for (int i = 0; i < TIEMPO; i++)
  1166  079A  01C5               	clrf	main@i_208
  1167  079B  01C6               	clrf	main@i_208+1
  1168  079C                     l87:
  1169  079C  0846               	movf	main@i_208+1,w
  1170  079D  3A80               	xorlw	128
  1171  079E  00C0               	movwf	??_main
  1172  079F  0851               	movf	_TIEMPO+1,w
  1173  07A0  3A80               	xorlw	128
  1174  07A1  0240               	subwf	??_main,w
  1175  07A2  1D03               	skipz
  1176  07A3  2FA6               	goto	u1745
  1177  07A4  0850               	movf	_TIEMPO,w
  1178  07A5  0245               	subwf	main@i_208,w
  1179  07A6                     u1745:
  1180  07A6  1803               	btfsc	3,0
  1181  07A7  2FC0               	goto	l89
  1182                           
  1183                           ;MAIN.c: 170: {;MAIN.c: 171: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1184  07A8  301A               	movlw	26
  1185  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1186  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1187  07AB  00C2               	movwf	??_main+2
  1188  07AC  305E               	movlw	94
  1189  07AD  00C1               	movwf	??_main+1
  1190  07AE  306D               	movlw	109
  1191  07AF  00C0               	movwf	??_main
  1192  07B0                     u1797:
  1193  07B0  0BC0               	decfsz	??_main,f
  1194  07B1  2FB0               	goto	u1797
  1195  07B2  0BC1               	decfsz	??_main+1,f
  1196  07B3  2FB0               	goto	u1797
  1197  07B4  0BC2               	decfsz	??_main+2,f
  1198  07B5  2FB0               	goto	u1797
  1199  07B6  2FB7               	nop2
  1200  07B7  3001               	movlw	1
  1201  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1202  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1203  07BA  07C5               	addwf	main@i_208,f
  1204  07BB  1803               	skipnc
  1205  07BC  0AC6               	incf	main@i_208+1,f
  1206  07BD  3000               	movlw	0
  1207  07BE  07C6               	addwf	main@i_208+1,f
  1208  07BF  2F9C               	goto	l87
  1209  07C0                     l89:
  1210                           
  1211                           ;MAIN.c: 172: };MAIN.c: 173: PORTDbits.RD0 = 0;
  1212  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1213  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1214  07C2  1008               	bcf	8,0	;volatile
  1215  07C3                     l1779:
  1216                           
  1217                           ;MAIN.c: 88: {;MAIN.c: 89: Boton_Aumento = PORTBbits.RB0;
  1218  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1219  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1220  07C5  0806               	movf	6,w	;volatile
  1221  07C6  3901               	andlw	1
  1222  07C7  00C0               	movwf	??_main
  1223  07C8  01C1               	clrf	??_main+1
  1224  07C9  0840               	movf	??_main,w
  1225  07CA  00CE               	movwf	_Boton_Aumento
  1226  07CB  0841               	movf	??_main+1,w
  1227  07CC  00CF               	movwf	_Boton_Aumento+1
  1228                           
  1229                           ;MAIN.c: 90: Boton_Decremento = PORTBbits.RB1;
  1230  07CD  0C06               	rrf	6,w	;volatile
  1231  07CE  3901               	andlw	1
  1232  07CF  00C0               	movwf	??_main
  1233  07D0  01C1               	clrf	??_main+1
  1234  07D1  0840               	movf	??_main,w
  1235  07D2  00CC               	movwf	_Boton_Decremento
  1236  07D3  0841               	movf	??_main+1,w
  1237  07D4  00CD               	movwf	_Boton_Decremento+1
  1238                           
  1239                           ;MAIN.c: 91: Boton_Aceptar = PORTBbits.RB2;
  1240  07D5  0C06               	rrf	6,w	;volatile
  1241  07D6  00C0               	movwf	??_main
  1242  07D7  0C40               	rrf	??_main,w
  1243  07D8  3901               	andlw	1
  1244  07D9  00C1               	movwf	??_main+1
  1245  07DA  01C2               	clrf	??_main+2
  1246  07DB  0841               	movf	??_main+1,w
  1247  07DC  00CA               	movwf	_Boton_Aceptar
  1248  07DD  0842               	movf	??_main+2,w
  1249  07DE  00CB               	movwf	_Boton_Aceptar+1
  1250                           
  1251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1252                           ; Switch size 1, requested type "simple"
  1253                           ; Number of cases is 1, Range of values is 0 to 0
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte            4     3 (average)
  1257                           ; direct_byte           11     8 (fixed)
  1258                           ; jumptable            260     6 (fixed)
  1259                           ;	Chosen strategy is simple_byte
  1260  07DF  0853               	movf	_ESTADO+1,w
  1261  07E0  3A00               	xorlw	0	; case 0
  1262  07E1  1903               	skipnz
  1263  07E2  2FE4               	goto	l1891
  1264  07E3  2FC3               	goto	l1779
  1265  07E4                     l1891:
  1266                           
  1267                           ; Switch size 1, requested type "simple"
  1268                           ; Number of cases is 4, Range of values is 0 to 3
  1269                           ; switch strategies available:
  1270                           ; Name         Instructions Cycles
  1271                           ; simple_byte           13     7 (average)
  1272                           ; direct_byte           20     8 (fixed)
  1273                           ; jumptable            260     6 (fixed)
  1274                           ;	Chosen strategy is simple_byte
  1275  07E4  0852               	movf	_ESTADO,w
  1276  07E5  3A00               	xorlw	0	; case 0
  1277  07E6  1903               	skipnz
  1278  07E7  2E29               	goto	l1785
  1279  07E8  3A01               	xorlw	1	; case 1
  1280  07E9  1903               	skipnz
  1281  07EA  2E57               	goto	l1795
  1282  07EB  3A03               	xorlw	3	; case 2
  1283  07EC  1903               	skipnz
  1284  07ED  2EF4               	goto	l1827
  1285  07EE  3A01               	xorlw	1	; case 3
  1286  07EF  1903               	skipnz
  1287  07F0  2F0D               	goto	l1833
  1288  07F1  2FC3               	goto	l1779
  1289  07F2  120A  118A  2800   	ljmp	start
  1290  07F5                     __end_of_main:
  1291                           
  1292                           	psect	text1
  1293  0494                     __ptext1:	
  1294 ;; *************** function _search_channel *****************
  1295 ;; Defined at:
  1296 ;;		line 54 in file "MAIN.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  channel         2   30[BANK0 ] int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 300/0
  1307 ;;		On exit  : 300/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         0       2       0       0       0
  1311 ;;      Locals:         0       0       0       0       0
  1312 ;;      Temps:          2       0       0       0       0
  1313 ;;      Totals:         2       2       0       0       0
  1314 ;;Total ram usage:        4 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    2
  1317 ;; This function calls:
  1318 ;;		___awtoft
  1319 ;;		___ftdiv
  1320 ;;		___ftmul
  1321 ;;		___fttol
  1322 ;;		_sprintf
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           
  1329                           ;psect for function _search_channel
  1330  0494                     _search_channel:
  1331                           
  1332                           ;MAIN.c: 56: ADCON0 = channel;
  1333                           
  1334                           ;incstack = 0
  1335                           ; Regs used in _search_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1336  0494  083E               	movf	search_channel@channel,w
  1337  0495  009F               	movwf	31	;volatile
  1338                           
  1339                           ;MAIN.c: 57: ADCON0bits.ADON = 1;
  1340  0496  141F               	bsf	31,0	;volatile
  1341                           
  1342                           ;MAIN.c: 58: _delay((unsigned long)((30)*(20000000/4000000.0)));
  1343  0497  3031               	movlw	49
  1344  0498  00FC               	movwf	??_search_channel
  1345  0499                     u1807:
  1346  0499  0BFC               	decfsz	??_search_channel,f
  1347  049A  2C99               	goto	u1807
  1348  049B  2C9C               	nop2
  1349                           
  1350                           ;MAIN.c: 59: ADCON0bits.GO = 1;
  1351  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1352  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1353  049E  151F               	bsf	31,2	;volatile
  1354  049F                     l60:	
  1355                           ;MAIN.c: 60: while (ADCON0bits.GO == 1);
  1356                           
  1357  049F  191F               	btfsc	31,2	;volatile
  1358  04A0  2C9F               	goto	l60
  1359                           
  1360                           ;MAIN.c: 61: ADCON0bits.ADON = 0;
  1361  04A1  101F               	bcf	31,0	;volatile
  1362                           
  1363                           ;MAIN.c: 63: ADC = ADRESH;
  1364  04A2  081E               	movf	30,w	;volatile
  1365  04A3  00FC               	movwf	??_search_channel
  1366  04A4  01FD               	clrf	??_search_channel+1
  1367  04A5  087C               	movf	??_search_channel,w
  1368  04A6  00D8               	movwf	_ADC
  1369  04A7  087D               	movf	??_search_channel+1,w
  1370  04A8  00D9               	movwf	_ADC+1
  1371                           
  1372                           ;MAIN.c: 64: ADC = ADC << 8;
  1373  04A9  0859               	movf	_ADC+1,w
  1374  04AA  00FD               	movwf	??_search_channel+1
  1375  04AB  0858               	movf	_ADC,w
  1376  04AC  00FC               	movwf	??_search_channel
  1377  04AD  087C               	movf	??_search_channel,w
  1378  04AE  00FD               	movwf	??_search_channel+1
  1379  04AF  01FC               	clrf	??_search_channel
  1380  04B0  087C               	movf	??_search_channel,w
  1381  04B1  00D8               	movwf	_ADC
  1382  04B2  087D               	movf	??_search_channel+1,w
  1383  04B3  00D9               	movwf	_ADC+1
  1384                           
  1385                           ;MAIN.c: 65: ADC = ADC + ADRESL;
  1386  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1387  04B5  081E               	movf	30,w	;volatile
  1388  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1389  04B7  0758               	addwf	_ADC,w
  1390  04B8  00FC               	movwf	??_search_channel
  1391  04B9  0859               	movf	_ADC+1,w
  1392  04BA  1803               	skipnc
  1393  04BB  0A59               	incf	_ADC+1,w
  1394  04BC  00FD               	movwf	??_search_channel+1
  1395  04BD  087C               	movf	??_search_channel,w
  1396  04BE  00D8               	movwf	_ADC
  1397  04BF  087D               	movf	??_search_channel+1,w
  1398  04C0  00D9               	movwf	_ADC+1
  1399                           
  1400                           ;MAIN.c: 67: VOLTAJE = (ADC*5.0)/1024.0;
  1401  04C1  3000               	movlw	0
  1402  04C2  00AF               	movwf	___ftdiv@f2
  1403  04C3  3080               	movlw	128
  1404  04C4  00B0               	movwf	___ftdiv@f2+1
  1405  04C5  3044               	movlw	68
  1406  04C6  00B1               	movwf	___ftdiv@f2+2
  1407  04C7  3000               	movlw	0
  1408  04C8  00A0               	movwf	___ftmul@f1
  1409  04C9  30A0               	movlw	160
  1410  04CA  00A1               	movwf	___ftmul@f1+1
  1411  04CB  3040               	movlw	64
  1412  04CC  00A2               	movwf	___ftmul@f1+2
  1413  04CD  0859               	movf	_ADC+1,w
  1414  04CE  00F9               	movwf	___awtoft@c+1
  1415  04CF  0858               	movf	_ADC,w
  1416  04D0  00F8               	movwf	___awtoft@c
  1417  04D1  120A  158A  26E2  120A  118A  	fcall	___awtoft
  1418  04D6  0878               	movf	?___awtoft,w
  1419  04D7  00A3               	movwf	___ftmul@f2
  1420  04D8  0879               	movf	?___awtoft+1,w
  1421  04D9  00A4               	movwf	___ftmul@f2+1
  1422  04DA  087A               	movf	?___awtoft+2,w
  1423  04DB  00A5               	movwf	___ftmul@f2+2
  1424  04DC  120A  118A  23E1  120A  118A  	fcall	___ftmul
  1425  04E1  0820               	movf	?___ftmul,w
  1426  04E2  00B2               	movwf	___ftdiv@f1
  1427  04E3  0821               	movf	?___ftmul+1,w
  1428  04E4  00B3               	movwf	___ftdiv@f1+1
  1429  04E5  0822               	movf	?___ftmul+2,w
  1430  04E6  00B4               	movwf	___ftdiv@f1+2
  1431  04E7  120A  118A  2160  120A  118A  	fcall	___ftdiv
  1432  04EC  082F               	movf	?___ftdiv,w
  1433  04ED  00C7               	movwf	_VOLTAJE
  1434  04EE  0830               	movf	?___ftdiv+1,w
  1435  04EF  00C8               	movwf	_VOLTAJE+1
  1436  04F0  0831               	movf	?___ftdiv+2,w
  1437  04F1  00C9               	movwf	_VOLTAJE+2
  1438                           
  1439                           ;MAIN.c: 69: if (channel == 0b01000000)
  1440  04F2  3040               	movlw	64
  1441  04F3  063E               	xorwf	search_channel@channel,w
  1442  04F4  043F               	iorwf	search_channel@channel+1,w
  1443  04F5  1D03               	btfss	3,2
  1444  04F6  2D25               	goto	l1771
  1445                           
  1446                           ;MAIN.c: 70: {;MAIN.c: 71: SENSOR1 = (VOLTAJE*100);
  1447  04F7  0847               	movf	_VOLTAJE,w
  1448  04F8  00A3               	movwf	___ftmul@f2
  1449  04F9  0848               	movf	_VOLTAJE+1,w
  1450  04FA  00A4               	movwf	___ftmul@f2+1
  1451  04FB  0849               	movf	_VOLTAJE+2,w
  1452  04FC  00A5               	movwf	___ftmul@f2+2
  1453  04FD  3000               	movlw	0
  1454  04FE  00A0               	movwf	___ftmul@f1
  1455  04FF  30C8               	movlw	200
  1456  0500  00A1               	movwf	___ftmul@f1+1
  1457  0501  3042               	movlw	66
  1458  0502  00A2               	movwf	___ftmul@f1+2
  1459  0503  120A  118A  23E1  120A  118A  	fcall	___ftmul
  1460  0508  0820               	movf	?___ftmul,w
  1461  0509  00AF               	movwf	___fttol@f1
  1462  050A  0821               	movf	?___ftmul+1,w
  1463  050B  00B0               	movwf	___fttol@f1+1
  1464  050C  0822               	movf	?___ftmul+2,w
  1465  050D  00B1               	movwf	___fttol@f1+2
  1466  050E  120A  118A  20E5  120A  118A  	fcall	___fttol
  1467  0513  0830               	movf	?___fttol+1,w
  1468  0514  00D7               	movwf	_SENSOR1+1
  1469  0515  082F               	movf	?___fttol,w
  1470  0516  00D6               	movwf	_SENSOR1
  1471                           
  1472                           ;MAIN.c: 72: sprintf(SEN1, "%i", SENSOR1);
  1473  0517  3054               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1474  0518  00FF               	movwf	127
  1475  0519  087F               	movf	127,w
  1476  051A  00A0               	movwf	sprintf@f
  1477  051B  0857               	movf	_SENSOR1+1,w
  1478  051C  00A2               	movwf	?_sprintf+2
  1479  051D  0856               	movf	_SENSOR1,w
  1480  051E  00A1               	movwf	?_sprintf+1
  1481  051F  3066               	movlw	(low (_SEN1| 0))& (0+255)
  1482  0520  120A  118A  2557  120A  118A  	fcall	_sprintf
  1483  0525                     l1771:
  1484                           
  1485                           ;MAIN.c: 74: };MAIN.c: 76: if (channel == 0b01001000)
  1486  0525  3048               	movlw	72
  1487  0526  063E               	xorwf	search_channel@channel,w
  1488  0527  043F               	iorwf	search_channel@channel+1,w
  1489  0528  1D03               	btfss	3,2
  1490  0529  0008               	return
  1491                           
  1492                           ;MAIN.c: 77: {;MAIN.c: 78: SENSOR2 = (VOLTAJE*100);
  1493  052A  0847               	movf	_VOLTAJE,w
  1494  052B  00A3               	movwf	___ftmul@f2
  1495  052C  0848               	movf	_VOLTAJE+1,w
  1496  052D  00A4               	movwf	___ftmul@f2+1
  1497  052E  0849               	movf	_VOLTAJE+2,w
  1498  052F  00A5               	movwf	___ftmul@f2+2
  1499  0530  3000               	movlw	0
  1500  0531  00A0               	movwf	___ftmul@f1
  1501  0532  30C8               	movlw	200
  1502  0533  00A1               	movwf	___ftmul@f1+1
  1503  0534  3042               	movlw	66
  1504  0535  00A2               	movwf	___ftmul@f1+2
  1505  0536  120A  118A  23E1  120A  118A  	fcall	___ftmul
  1506  053B  0820               	movf	?___ftmul,w
  1507  053C  00AF               	movwf	___fttol@f1
  1508  053D  0821               	movf	?___ftmul+1,w
  1509  053E  00B0               	movwf	___fttol@f1+1
  1510  053F  0822               	movf	?___ftmul+2,w
  1511  0540  00B1               	movwf	___fttol@f1+2
  1512  0541  120A  118A  20E5  120A  118A  	fcall	___fttol
  1513  0546  0830               	movf	?___fttol+1,w
  1514  0547  00D5               	movwf	_SENSOR2+1
  1515  0548  082F               	movf	?___fttol,w
  1516  0549  00D4               	movwf	_SENSOR2
  1517                           
  1518                           ;MAIN.c: 79: sprintf(SEN2, "%i", SENSOR2);
  1519  054A  3054               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1520  054B  00FF               	movwf	127
  1521  054C  087F               	movf	127,w
  1522  054D  00A0               	movwf	sprintf@f
  1523  054E  0855               	movf	_SENSOR2+1,w
  1524  054F  00A2               	movwf	?_sprintf+2
  1525  0550  0854               	movf	_SENSOR2,w
  1526  0551  00A1               	movwf	?_sprintf+1
  1527  0552  3060               	movlw	(low (_SEN2| 0))& (0+255)
  1528  0553  120A  118A  2557   	fcall	_sprintf
  1529  0556  0008               	return
  1530  0557                     __end_of_search_channel:
  1531                           
  1532                           	psect	text2
  1533  0557                     __ptext2:	
  1534 ;; *************** function _sprintf *****************
  1535 ;; Defined at:
  1536 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  sp              1    wreg     PTR unsigned char 
  1539 ;;		 -> TIEM(6), SEN2(6), SEN1(6), 
  1540 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1541 ;;		 -> STR_9(3), STR_8(3), STR_4(3), STR_3(3), 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1544 ;;		 -> TIEM(6), SEN2(6), SEN1(6), 
  1545 ;;  tmpval          4    0        struct .
  1546 ;;  val             2    9[BANK0 ] unsigned int 
  1547 ;;  cp              2    0        PTR const unsigned char 
  1548 ;;  len             2    0        unsigned int 
  1549 ;;  c               1   12[BANK0 ] unsigned char 
  1550 ;;  prec            1    8[BANK0 ] char 
  1551 ;;  flag            1    7[BANK0 ] unsigned char 
  1552 ;;  ap              1    6[BANK0 ] PTR void [1]
  1553 ;;		 -> ?_sprintf(2), 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  2    0[BANK0 ] int 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 300/0
  1560 ;;		On exit  : B00/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       3       0       0       0
  1564 ;;      Locals:         0       7       0       0       0
  1565 ;;      Temps:          0       3       0       0       0
  1566 ;;      Totals:         0      13       0       0       0
  1567 ;;Total ram usage:       13 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    1
  1570 ;; This function calls:
  1571 ;;		___lwdiv
  1572 ;;		___lwmod
  1573 ;; This function is called by:
  1574 ;;		_search_channel
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           
  1580                           ;psect for function _sprintf
  1581  0557                     _sprintf:
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1585                           ;sprintf@sp stored from wreg
  1586  0557  00AB               	movwf	sprintf@sp
  1587                           
  1588                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1589  0558  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1590  0559  00FF               	movwf	127
  1591  055A  087F               	movf	127,w
  1592  055B  00A6               	movwf	sprintf@ap
  1593  055C                     l1565:	
  1594                           ;doprnt.c: 553: while((c = *f++)) {
  1595                           
  1596  055C  3001               	movlw	1
  1597  055D  07A0               	addwf	sprintf@f,f
  1598  055E  30FF               	movlw	-1
  1599  055F  0720               	addwf	sprintf@f,w
  1600  0560  0084               	movwf	4
  1601  0561  120A  118A  200D  120A  118A  	fcall	stringdir
  1602  0566  00FF               	movwf	127
  1603  0567  087F               	movf	127,w
  1604  0568  00AC               	movwf	sprintf@c
  1605  0569  082C               	movf	sprintf@c,w
  1606  056A  1903               	btfsc	3,2
  1607  056B  2E1E               	goto	l1567
  1608                           
  1609                           ;doprnt.c: 555: if(c != '%')
  1610  056C  3025               	movlw	37
  1611  056D  062C               	xorwf	sprintf@c,w
  1612  056E  1903               	btfsc	3,2
  1613  056F  2D7C               	goto	l1519
  1614                           
  1615                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1616  0570  082C               	movf	sprintf@c,w
  1617  0571  00FF               	movwf	127
  1618  0572  082B               	movf	sprintf@sp,w
  1619  0573  0084               	movwf	4
  1620  0574  087F               	movf	127,w
  1621  0575  1383               	bcf	3,7	;select IRP bank0
  1622  0576  0080               	movwf	0
  1623  0577  3001               	movlw	1
  1624  0578  00FF               	movwf	127
  1625  0579  087F               	movf	127,w
  1626  057A  07AB               	addwf	sprintf@sp,f
  1627                           
  1628                           ;doprnt.c: 559: continue;
  1629  057B  2D5C               	goto	l1565
  1630  057C                     l1519:
  1631                           
  1632                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1633  057C  01A7               	clrf	sprintf@flag
  1634                           
  1635                           ;doprnt.c: 661: switch(c = *f++) {
  1636  057D  3001               	movlw	1
  1637  057E  07A0               	addwf	sprintf@f,f
  1638  057F  30FF               	movlw	-1
  1639  0580  0720               	addwf	sprintf@f,w
  1640  0581  0084               	movwf	4
  1641  0582  120A  118A  200D  120A  118A  	fcall	stringdir
  1642  0587  00AC               	movwf	sprintf@c
  1643                           
  1644                           ; Switch size 1, requested type "simple"
  1645                           ; Number of cases is 3, Range of values is 0 to 105
  1646                           ; switch strategies available:
  1647                           ; Name         Instructions Cycles
  1648                           ; simple_byte           10     6 (average)
  1649                           ; jumptable            260     6 (fixed)
  1650                           ;	Chosen strategy is simple_byte
  1651  0588  3A00               	xorlw	0	; case 0
  1652  0589  1903               	skipnz
  1653  058A  2E1E               	goto	l1567
  1654  058B  3A64               	xorlw	100	; case 100
  1655  058C  1903               	skipnz
  1656  058D  2D92               	goto	l1525
  1657  058E  3A0D               	xorlw	13	; case 105
  1658  058F  1903               	skipnz
  1659  0590  2D92               	goto	l1525
  1660  0591  2D5C               	goto	l1565
  1661  0592                     l1525:
  1662                           
  1663                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1664  0592  0826               	movf	sprintf@ap,w
  1665  0593  0084               	movwf	4
  1666  0594  1383               	bcf	3,7	;select IRP bank0
  1667  0595  0800               	movf	0,w
  1668  0596  00A9               	movwf	sprintf@val
  1669  0597  0A84               	incf	4,f
  1670  0598  0800               	movf	0,w
  1671  0599  00AA               	movwf	sprintf@val+1
  1672  059A  3002               	movlw	2
  1673  059B  00FF               	movwf	127
  1674  059C  087F               	movf	127,w
  1675  059D  07A6               	addwf	sprintf@ap,f
  1676                           
  1677                           ;doprnt.c: 1287: if((int)val < 0) {
  1678  059E  1FAA               	btfss	sprintf@val+1,7
  1679  059F  2DA9               	goto	l1535
  1680                           
  1681                           ;doprnt.c: 1288: flag |= 0x03;
  1682  05A0  3003               	movlw	3
  1683  05A1  00FF               	movwf	127
  1684  05A2  087F               	movf	127,w
  1685  05A3  04A7               	iorwf	sprintf@flag,f
  1686                           
  1687                           ;doprnt.c: 1289: val = -val;
  1688  05A4  09A9               	comf	sprintf@val,f
  1689  05A5  09AA               	comf	sprintf@val+1,f
  1690  05A6  0AA9               	incf	sprintf@val,f
  1691  05A7  1903               	skipnz
  1692  05A8  0AAA               	incf	sprintf@val+1,f
  1693  05A9                     l1535:
  1694                           
  1695                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  1696  05A9  01AC               	clrf	sprintf@c
  1697  05AA  0AAC               	incf	sprintf@c,f
  1698  05AB                     l1541:
  1699                           
  1700                           ;doprnt.c: 1332: if(val < dpowers[c])
  1701  05AB  082C               	movf	sprintf@c,w
  1702  05AC  00A3               	movwf	??_sprintf
  1703  05AD  0723               	addwf	??_sprintf,w
  1704  05AE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1705  05AF  0084               	movwf	4
  1706  05B0  120A  118A  200D  120A  118A  	fcall	stringdir
  1707  05B5  00A4               	movwf	??_sprintf+1
  1708  05B6  120A  118A  200D  120A  118A  	fcall	stringdir
  1709  05BB  00A5               	movwf	??_sprintf+2
  1710  05BC  0825               	movf	??_sprintf+2,w
  1711  05BD  022A               	subwf	sprintf@val+1,w
  1712  05BE  1D03               	skipz
  1713  05BF  2DC2               	goto	u1295
  1714  05C0  0824               	movf	??_sprintf+1,w
  1715  05C1  0229               	subwf	sprintf@val,w
  1716  05C2                     u1295:
  1717  05C2  1C03               	btfss	3,0
  1718  05C3  2DCC               	goto	l1549
  1719  05C4  3001               	movlw	1
  1720  05C5  00FF               	movwf	127
  1721  05C6  087F               	movf	127,w
  1722  05C7  07AC               	addwf	sprintf@c,f
  1723  05C8  3005               	movlw	5
  1724  05C9  062C               	xorwf	sprintf@c,w
  1725  05CA  1D03               	btfss	3,2
  1726  05CB  2DAB               	goto	l1541
  1727  05CC                     l1549:
  1728                           
  1729                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1730  05CC  0827               	movf	sprintf@flag,w
  1731  05CD  3903               	andlw	3
  1732  05CE  1903               	btfsc	3,2
  1733  05CF  2DDB               	goto	l1555
  1734                           
  1735                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  1736  05D0  302D               	movlw	45
  1737  05D1  00FF               	movwf	127
  1738  05D2  082B               	movf	sprintf@sp,w
  1739  05D3  0084               	movwf	4
  1740  05D4  087F               	movf	127,w
  1741  05D5  1383               	bcf	3,7	;select IRP bank0
  1742  05D6  0080               	movwf	0
  1743  05D7  3001               	movlw	1
  1744  05D8  00FF               	movwf	127
  1745  05D9  087F               	movf	127,w
  1746  05DA  07AB               	addwf	sprintf@sp,f
  1747  05DB                     l1555:
  1748                           
  1749                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1750  05DB  082C               	movf	sprintf@c,w
  1751  05DC  00FF               	movwf	127
  1752  05DD  087F               	movf	127,w
  1753  05DE  00A8               	movwf	sprintf@prec
  1754  05DF                     l1563:	
  1755                           ;doprnt.c: 1500: while(prec--) {
  1756                           
  1757  05DF  30FF               	movlw	255
  1758  05E0  00FF               	movwf	127
  1759  05E1  087F               	movf	127,w
  1760  05E2  07A8               	addwf	sprintf@prec,f
  1761  05E3  0A28               	incf	sprintf@prec,w
  1762  05E4  1903               	btfsc	3,2
  1763  05E5  2D5C               	goto	l1565
  1764                           
  1765                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1766  05E6  300A               	movlw	10
  1767  05E7  00F7               	movwf	___lwmod@divisor
  1768  05E8  3000               	movlw	0
  1769  05E9  00F8               	movwf	___lwmod@divisor+1
  1770  05EA  0828               	movf	sprintf@prec,w
  1771  05EB  00A3               	movwf	??_sprintf
  1772  05EC  0723               	addwf	??_sprintf,w
  1773  05ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1774  05EE  0084               	movwf	4
  1775  05EF  120A  118A  200D  120A  118A  	fcall	stringdir
  1776  05F4  00F0               	movwf	___lwdiv@divisor
  1777  05F5  120A  118A  200D  120A  118A  	fcall	stringdir
  1778  05FA  00F1               	movwf	___lwdiv@divisor+1
  1779  05FB  082A               	movf	sprintf@val+1,w
  1780  05FC  00F3               	movwf	___lwdiv@dividend+1
  1781  05FD  0829               	movf	sprintf@val,w
  1782  05FE  00F2               	movwf	___lwdiv@dividend
  1783  05FF  120A  158A  2735  120A  118A  	fcall	___lwdiv
  1784  0604  0871               	movf	?___lwdiv+1,w
  1785  0605  00FA               	movwf	___lwmod@dividend+1
  1786  0606  0870               	movf	?___lwdiv,w
  1787  0607  00F9               	movwf	___lwmod@dividend
  1788  0608  120A  158A  2703  120A  118A  	fcall	___lwmod
  1789  060D  0877               	movf	?___lwmod,w
  1790  060E  3E30               	addlw	48
  1791  060F  00FF               	movwf	127
  1792  0610  087F               	movf	127,w
  1793  0611  00AC               	movwf	sprintf@c
  1794                           
  1795                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1796  0612  082C               	movf	sprintf@c,w
  1797  0613  00FF               	movwf	127
  1798  0614  082B               	movf	sprintf@sp,w
  1799  0615  0084               	movwf	4
  1800  0616  087F               	movf	127,w
  1801  0617  1383               	bcf	3,7	;select IRP bank0
  1802  0618  0080               	movwf	0
  1803  0619  3001               	movlw	1
  1804  061A  00FF               	movwf	127
  1805  061B  087F               	movf	127,w
  1806  061C  07AB               	addwf	sprintf@sp,f
  1807  061D  2DDF               	goto	l1563
  1808  061E                     l1567:
  1809                           
  1810                           ;doprnt.c: 1564: *sp = 0;
  1811  061E  082B               	movf	sprintf@sp,w
  1812  061F  0084               	movwf	4
  1813  0620  1383               	bcf	3,7	;select IRP bank0
  1814  0621  0180               	clrf	0
  1815  0622  0008               	return
  1816  0623                     __end_of_sprintf:
  1817                           
  1818                           	psect	text3
  1819  0F03                     __ptext3:	
  1820 ;; *************** function ___lwmod *****************
  1821 ;; Defined at:
  1822 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  divisor         2    7[COMMON] unsigned int 
  1825 ;;  dividend        2    9[COMMON] unsigned int 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  counter         1   11[COMMON] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  2    7[COMMON] unsigned int 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, btemp+1
  1832 ;; Tracked objects:
  1833 ;;		On entry : 300/0
  1834 ;;		On exit  : 300/0
  1835 ;;		Unchanged: 300/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         4       0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         5       0       0       0       0
  1841 ;;Total ram usage:        5 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_sprintf
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function ___lwmod
  1852  0F03                     ___lwmod:
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1856  0F03  0877               	movf	___lwmod@divisor,w
  1857  0F04  0478               	iorwf	___lwmod@divisor+1,w
  1858  0F05  1903               	btfsc	3,2
  1859  0F06  2F30               	goto	l1429
  1860  0F07  01FB               	clrf	___lwmod@counter
  1861  0F08  0AFB               	incf	___lwmod@counter,f
  1862  0F09                     l1419:
  1863  0F09  1BF8               	btfsc	___lwmod@divisor+1,7
  1864  0F0A  2F17               	goto	l1421
  1865  0F0B  3001               	movlw	1
  1866  0F0C                     u1205:
  1867  0F0C  1003               	clrc
  1868  0F0D  0DF7               	rlf	___lwmod@divisor,f
  1869  0F0E  0DF8               	rlf	___lwmod@divisor+1,f
  1870  0F0F  3EFF               	addlw	-1
  1871  0F10  1D03               	skipz
  1872  0F11  2F0C               	goto	u1205
  1873  0F12  3001               	movlw	1
  1874  0F13  00FF               	movwf	127
  1875  0F14  087F               	movf	127,w
  1876  0F15  07FB               	addwf	___lwmod@counter,f
  1877  0F16  2F09               	goto	l1419
  1878  0F17                     l1421:
  1879  0F17  0878               	movf	___lwmod@divisor+1,w
  1880  0F18  027A               	subwf	___lwmod@dividend+1,w
  1881  0F19  1D03               	skipz
  1882  0F1A  2F1D               	goto	u1225
  1883  0F1B  0877               	movf	___lwmod@divisor,w
  1884  0F1C  0279               	subwf	___lwmod@dividend,w
  1885  0F1D                     u1225:
  1886  0F1D  1C03               	skipc
  1887  0F1E  2F25               	goto	l1425
  1888  0F1F  0877               	movf	___lwmod@divisor,w
  1889  0F20  02F9               	subwf	___lwmod@dividend,f
  1890  0F21  0878               	movf	___lwmod@divisor+1,w
  1891  0F22  1C03               	skipc
  1892  0F23  03FA               	decf	___lwmod@dividend+1,f
  1893  0F24  02FA               	subwf	___lwmod@dividend+1,f
  1894  0F25                     l1425:
  1895  0F25  3001               	movlw	1
  1896  0F26                     u1235:
  1897  0F26  1003               	clrc
  1898  0F27  0CF8               	rrf	___lwmod@divisor+1,f
  1899  0F28  0CF7               	rrf	___lwmod@divisor,f
  1900  0F29  3EFF               	addlw	-1
  1901  0F2A  1D03               	skipz
  1902  0F2B  2F26               	goto	u1235
  1903  0F2C  3001               	movlw	1
  1904  0F2D  02FB               	subwf	___lwmod@counter,f
  1905  0F2E  1D03               	btfss	3,2
  1906  0F2F  2F17               	goto	l1421
  1907  0F30                     l1429:
  1908  0F30  087A               	movf	___lwmod@dividend+1,w
  1909  0F31  00F8               	movwf	?___lwmod+1
  1910  0F32  0879               	movf	___lwmod@dividend,w
  1911  0F33  00F7               	movwf	?___lwmod
  1912  0F34  0008               	return
  1913  0F35                     __end_of___lwmod:
  1914                           
  1915                           	psect	text4
  1916  0F35                     __ptext4:	
  1917 ;; *************** function ___lwdiv *****************
  1918 ;; Defined at:
  1919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  divisor         2    0[COMMON] unsigned int 
  1922 ;;  dividend        2    2[COMMON] unsigned int 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  quotient        2    4[COMMON] unsigned int 
  1925 ;;  counter         1    6[COMMON] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2    0[COMMON] unsigned int 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0, btemp+1
  1930 ;; Tracked objects:
  1931 ;;		On entry : 300/0
  1932 ;;		On exit  : 300/0
  1933 ;;		Unchanged: 300/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1935 ;;      Params:         4       0       0       0       0
  1936 ;;      Locals:         3       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0
  1938 ;;      Totals:         7       0       0       0       0
  1939 ;;Total ram usage:        7 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_sprintf
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function ___lwdiv
  1950  0F35                     ___lwdiv:
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1954  0F35  01F4               	clrf	___lwdiv@quotient
  1955  0F36  01F5               	clrf	___lwdiv@quotient+1
  1956  0F37  0870               	movf	___lwdiv@divisor,w
  1957  0F38  0471               	iorwf	___lwdiv@divisor+1,w
  1958  0F39  1903               	btfsc	3,2
  1959  0F3A  2F6C               	goto	l1407
  1960  0F3B  01F6               	clrf	___lwdiv@counter
  1961  0F3C  0AF6               	incf	___lwdiv@counter,f
  1962  0F3D                     l1395:
  1963  0F3D  1BF1               	btfsc	___lwdiv@divisor+1,7
  1964  0F3E  2F4B               	goto	l1397
  1965  0F3F  3001               	movlw	1
  1966  0F40                     u1135:
  1967  0F40  1003               	clrc
  1968  0F41  0DF0               	rlf	___lwdiv@divisor,f
  1969  0F42  0DF1               	rlf	___lwdiv@divisor+1,f
  1970  0F43  3EFF               	addlw	-1
  1971  0F44  1D03               	skipz
  1972  0F45  2F40               	goto	u1135
  1973  0F46  3001               	movlw	1
  1974  0F47  00FF               	movwf	127
  1975  0F48  087F               	movf	127,w
  1976  0F49  07F6               	addwf	___lwdiv@counter,f
  1977  0F4A  2F3D               	goto	l1395
  1978  0F4B                     l1397:
  1979  0F4B  3001               	movlw	1
  1980  0F4C                     u1155:
  1981  0F4C  1003               	clrc
  1982  0F4D  0DF4               	rlf	___lwdiv@quotient,f
  1983  0F4E  0DF5               	rlf	___lwdiv@quotient+1,f
  1984  0F4F  3EFF               	addlw	-1
  1985  0F50  1D03               	skipz
  1986  0F51  2F4C               	goto	u1155
  1987  0F52  0871               	movf	___lwdiv@divisor+1,w
  1988  0F53  0273               	subwf	___lwdiv@dividend+1,w
  1989  0F54  1D03               	skipz
  1990  0F55  2F58               	goto	u1165
  1991  0F56  0870               	movf	___lwdiv@divisor,w
  1992  0F57  0272               	subwf	___lwdiv@dividend,w
  1993  0F58                     u1165:
  1994  0F58  1C03               	skipc
  1995  0F59  2F61               	goto	l1403
  1996  0F5A  0870               	movf	___lwdiv@divisor,w
  1997  0F5B  02F2               	subwf	___lwdiv@dividend,f
  1998  0F5C  0871               	movf	___lwdiv@divisor+1,w
  1999  0F5D  1C03               	skipc
  2000  0F5E  03F3               	decf	___lwdiv@dividend+1,f
  2001  0F5F  02F3               	subwf	___lwdiv@dividend+1,f
  2002  0F60  1474               	bsf	___lwdiv@quotient,0
  2003  0F61                     l1403:
  2004  0F61  3001               	movlw	1
  2005  0F62                     u1175:
  2006  0F62  1003               	clrc
  2007  0F63  0CF1               	rrf	___lwdiv@divisor+1,f
  2008  0F64  0CF0               	rrf	___lwdiv@divisor,f
  2009  0F65  3EFF               	addlw	-1
  2010  0F66  1D03               	skipz
  2011  0F67  2F62               	goto	u1175
  2012  0F68  3001               	movlw	1
  2013  0F69  02F6               	subwf	___lwdiv@counter,f
  2014  0F6A  1D03               	btfss	3,2
  2015  0F6B  2F4B               	goto	l1397
  2016  0F6C                     l1407:
  2017  0F6C  0875               	movf	___lwdiv@quotient+1,w
  2018  0F6D  00F1               	movwf	?___lwdiv+1
  2019  0F6E  0874               	movf	___lwdiv@quotient,w
  2020  0F6F  00F0               	movwf	?___lwdiv
  2021  0F70  0008               	return
  2022  0F71                     __end_of___lwdiv:
  2023                           
  2024                           	psect	text5
  2025  00E5                     __ptext5:	
  2026 ;; *************** function ___fttol *****************
  2027 ;; Defined at:
  2028 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fttol.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  f1              3   15[BANK0 ] float 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  lval            4   23[BANK0 ] unsigned long 
  2033 ;;  exp1            1   27[BANK0 ] unsigned char 
  2034 ;;  sign1           1   22[BANK0 ] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  4   15[BANK0 ] long 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0, btemp+1
  2039 ;; Tracked objects:
  2040 ;;		On entry : 300/0
  2041 ;;		On exit  : 300/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       4       0       0       0
  2045 ;;      Locals:         0       6       0       0       0
  2046 ;;      Temps:          0       3       0       0       0
  2047 ;;      Totals:         0      13       0       0       0
  2048 ;;Total ram usage:       13 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_search_channel
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function ___fttol
  2059  00E5                     ___fttol:
  2060                           
  2061                           ;incstack = 0
  2062                           ; Regs used in ___fttol: [wreg+status,2+status,0+btemp+1]
  2063  00E5  082F               	movf	___fttol@f1,w
  2064  00E6  00B3               	movwf	??___fttol
  2065  00E7  0830               	movf	___fttol@f1+1,w
  2066  00E8  00B4               	movwf	??___fttol+1
  2067  00E9  0831               	movf	___fttol@f1+2,w
  2068  00EA  00B5               	movwf	??___fttol+2
  2069  00EB  1003               	clrc
  2070  00EC  0D34               	rlf	??___fttol+1,w
  2071  00ED  0D35               	rlf	??___fttol+2,w
  2072  00EE  00FF               	movwf	127
  2073  00EF  087F               	movf	127,w
  2074  00F0  00BB               	movwf	___fttol@exp1
  2075  00F1  083B               	movf	___fttol@exp1,w
  2076  00F2  1D03               	btfss	3,2
  2077  00F3  28FD               	goto	l1687
  2078  00F4                     l1683:
  2079  00F4  3000               	movlw	0
  2080  00F5  00B2               	movwf	?___fttol+3
  2081  00F6  3000               	movlw	0
  2082  00F7  00B1               	movwf	?___fttol+2
  2083  00F8  3000               	movlw	0
  2084  00F9  00B0               	movwf	?___fttol+1
  2085  00FA  3000               	movlw	0
  2086  00FB  00AF               	movwf	?___fttol
  2087  00FC  0008               	return
  2088  00FD                     l1687:
  2089  00FD  082F               	movf	___fttol@f1,w
  2090  00FE  00B3               	movwf	??___fttol
  2091  00FF  0830               	movf	___fttol@f1+1,w
  2092  0100  00B4               	movwf	??___fttol+1
  2093  0101  0831               	movf	___fttol@f1+2,w
  2094  0102  00B5               	movwf	??___fttol+2
  2095  0103  3017               	movlw	23
  2096  0104                     u1545:
  2097  0104  1003               	clrc
  2098  0105  0CB5               	rrf	??___fttol+2,f
  2099  0106  0CB4               	rrf	??___fttol+1,f
  2100  0107  0CB3               	rrf	??___fttol,f
  2101  0108  3EFF               	addlw	-1
  2102  0109  1D03               	skipz
  2103  010A  2904               	goto	u1545
  2104  010B  0833               	movf	??___fttol,w
  2105  010C  00FF               	movwf	127
  2106  010D  087F               	movf	127,w
  2107  010E  00B6               	movwf	___fttol@sign1
  2108  010F  17B0               	bsf	___fttol@f1+1,7
  2109  0110  30FF               	movlw	255
  2110  0111  05AF               	andwf	___fttol@f1,f
  2111  0112  30FF               	movlw	255
  2112  0113  05B0               	andwf	___fttol@f1+1,f
  2113  0114  3000               	movlw	0
  2114  0115  05B1               	andwf	___fttol@f1+2,f
  2115  0116  082F               	movf	___fttol@f1,w
  2116  0117  00B7               	movwf	___fttol@lval
  2117  0118  0830               	movf	___fttol@f1+1,w
  2118  0119  00B8               	movwf	___fttol@lval+1
  2119  011A  0831               	movf	___fttol@f1+2,w
  2120  011B  00B9               	movwf	___fttol@lval+2
  2121  011C  01BA               	clrf	___fttol@lval+3
  2122  011D  308E               	movlw	142
  2123  011E  02BB               	subwf	___fttol@exp1,f
  2124  011F  1FBB               	btfss	___fttol@exp1,7
  2125  0120  2936               	goto	l1709
  2126  0121  083B               	movf	___fttol@exp1,w
  2127  0122  3A80               	xorlw	128
  2128  0123  3E8F               	addlw	143
  2129  0124  1C03               	btfss	3,0
  2130  0125  28F4               	goto	l1683
  2131  0126                     l1705:
  2132  0126  3001               	movlw	1
  2133  0127                     u1575:
  2134  0127  1003               	clrc
  2135  0128  0CBA               	rrf	___fttol@lval+3,f
  2136  0129  0CB9               	rrf	___fttol@lval+2,f
  2137  012A  0CB8               	rrf	___fttol@lval+1,f
  2138  012B  0CB7               	rrf	___fttol@lval,f
  2139  012C  3EFF               	addlw	-1
  2140  012D  1D03               	skipz
  2141  012E  2927               	goto	u1575
  2142  012F  3001               	movlw	1
  2143  0130  00FF               	movwf	127
  2144  0131  087F               	movf	127,w
  2145  0132  07BB               	addwf	___fttol@exp1,f
  2146  0133  1903               	btfsc	3,2
  2147  0134  2949               	goto	l1717
  2148  0135  2926               	goto	l1705
  2149  0136                     l1709:
  2150  0136  3018               	movlw	24
  2151  0137  023B               	subwf	___fttol@exp1,w
  2152  0138  1803               	btfsc	3,0
  2153  0139  28F4               	goto	l1683
  2154  013A                     l553:
  2155  013A  083B               	movf	___fttol@exp1,w
  2156  013B  1903               	btfsc	3,2
  2157  013C  2949               	goto	l1717
  2158  013D  3001               	movlw	1
  2159  013E  00B3               	movwf	??___fttol
  2160  013F                     u1605:
  2161  013F  1003               	clrc
  2162  0140  0DB7               	rlf	___fttol@lval,f
  2163  0141  0DB8               	rlf	___fttol@lval+1,f
  2164  0142  0DB9               	rlf	___fttol@lval+2,f
  2165  0143  0DBA               	rlf	___fttol@lval+3,f
  2166  0144  0BB3               	decfsz	??___fttol,f
  2167  0145  293F               	goto	u1605
  2168  0146  3001               	movlw	1
  2169  0147  02BB               	subwf	___fttol@exp1,f
  2170  0148  293A               	goto	l553
  2171  0149                     l1717:
  2172  0149  0836               	movf	___fttol@sign1,w
  2173  014A  1903               	btfsc	3,2
  2174  014B  2957               	goto	l1721
  2175  014C  09B7               	comf	___fttol@lval,f
  2176  014D  09B8               	comf	___fttol@lval+1,f
  2177  014E  09B9               	comf	___fttol@lval+2,f
  2178  014F  09BA               	comf	___fttol@lval+3,f
  2179  0150  0AB7               	incf	___fttol@lval,f
  2180  0151  1903               	skipnz
  2181  0152  0AB8               	incf	___fttol@lval+1,f
  2182  0153  1903               	skipnz
  2183  0154  0AB9               	incf	___fttol@lval+2,f
  2184  0155  1903               	skipnz
  2185  0156  0ABA               	incf	___fttol@lval+3,f
  2186  0157                     l1721:
  2187  0157  083A               	movf	___fttol@lval+3,w
  2188  0158  00B2               	movwf	?___fttol+3
  2189  0159  0839               	movf	___fttol@lval+2,w
  2190  015A  00B1               	movwf	?___fttol+2
  2191  015B  0838               	movf	___fttol@lval+1,w
  2192  015C  00B0               	movwf	?___fttol+1
  2193  015D  0837               	movf	___fttol@lval,w
  2194  015E  00AF               	movwf	?___fttol
  2195  015F  0008               	return
  2196  0160                     __end_of___fttol:
  2197                           
  2198                           	psect	text6
  2199  03E1                     __ptext6:	
  2200 ;; *************** function ___ftmul *****************
  2201 ;; Defined at:
  2202 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftmul.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  f1              3    0[BANK0 ] float 
  2205 ;;  f2              3    3[BANK0 ] float 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  f3_as_produc    3   10[BANK0 ] unsigned um
  2208 ;;  sign            1   14[BANK0 ] unsigned char 
  2209 ;;  cntr            1   13[BANK0 ] unsigned char 
  2210 ;;  exp             1    9[BANK0 ] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  3    0[BANK0 ] float 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 300/0
  2217 ;;		On exit  : 300/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         0       6       0       0       0
  2221 ;;      Locals:         0       6       0       0       0
  2222 ;;      Temps:          0       3       0       0       0
  2223 ;;      Totals:         0      15       0       0       0
  2224 ;;Total ram usage:       15 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    1
  2227 ;; This function calls:
  2228 ;;		___ftpack
  2229 ;; This function is called by:
  2230 ;;		_search_channel
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function ___ftmul
  2236  03E1                     ___ftmul:
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in ___ftmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2240  03E1  0820               	movf	___ftmul@f1,w
  2241  03E2  00A6               	movwf	??___ftmul
  2242  03E3  0821               	movf	___ftmul@f1+1,w
  2243  03E4  00A7               	movwf	??___ftmul+1
  2244  03E5  0822               	movf	___ftmul@f1+2,w
  2245  03E6  00A8               	movwf	??___ftmul+2
  2246  03E7  1003               	clrc
  2247  03E8  0D27               	rlf	??___ftmul+1,w
  2248  03E9  0D28               	rlf	??___ftmul+2,w
  2249  03EA  00FF               	movwf	127
  2250  03EB  087F               	movf	127,w
  2251  03EC  00A9               	movwf	___ftmul@exp
  2252  03ED  0829               	movf	___ftmul@exp,w
  2253  03EE  1D03               	btfss	3,2
  2254  03EF  2BF7               	goto	l1631
  2255  03F0  3000               	movlw	0
  2256  03F1  00A0               	movwf	?___ftmul
  2257  03F2  3000               	movlw	0
  2258  03F3  00A1               	movwf	?___ftmul+1
  2259  03F4  3000               	movlw	0
  2260  03F5  00A2               	movwf	?___ftmul+2
  2261  03F6  0008               	return
  2262  03F7                     l1631:
  2263  03F7  0823               	movf	___ftmul@f2,w
  2264  03F8  00A6               	movwf	??___ftmul
  2265  03F9  0824               	movf	___ftmul@f2+1,w
  2266  03FA  00A7               	movwf	??___ftmul+1
  2267  03FB  0825               	movf	___ftmul@f2+2,w
  2268  03FC  00A8               	movwf	??___ftmul+2
  2269  03FD  1003               	clrc
  2270  03FE  0D27               	rlf	??___ftmul+1,w
  2271  03FF  0D28               	rlf	??___ftmul+2,w
  2272  0400  00FF               	movwf	127
  2273  0401  087F               	movf	127,w
  2274  0402  00AE               	movwf	___ftmul@sign
  2275  0403  082E               	movf	___ftmul@sign,w
  2276  0404  1D03               	btfss	3,2
  2277  0405  2C0D               	goto	l1637
  2278  0406  3000               	movlw	0
  2279  0407  00A0               	movwf	?___ftmul
  2280  0408  3000               	movlw	0
  2281  0409  00A1               	movwf	?___ftmul+1
  2282  040A  3000               	movlw	0
  2283  040B  00A2               	movwf	?___ftmul+2
  2284  040C  0008               	return
  2285  040D                     l1637:
  2286  040D  082E               	movf	___ftmul@sign,w
  2287  040E  3E7B               	addlw	123
  2288  040F  00FF               	movwf	127
  2289  0410  087F               	movf	127,w
  2290  0411  07A9               	addwf	___ftmul@exp,f
  2291  0412  0822               	movf	___ftmul@f1+2,w
  2292  0413  00FF               	movwf	127
  2293  0414  087F               	movf	127,w
  2294  0415  00AE               	movwf	___ftmul@sign
  2295  0416  0825               	movf	___ftmul@f2+2,w
  2296  0417  00FF               	movwf	127
  2297  0418  087F               	movf	127,w
  2298  0419  06AE               	xorwf	___ftmul@sign,f
  2299  041A  3080               	movlw	128
  2300  041B  00FF               	movwf	127
  2301  041C  087F               	movf	127,w
  2302  041D  05AE               	andwf	___ftmul@sign,f
  2303  041E  17A1               	bsf	___ftmul@f1+1,7
  2304  041F  17A4               	bsf	___ftmul@f2+1,7
  2305  0420  30FF               	movlw	255
  2306  0421  05A3               	andwf	___ftmul@f2,f
  2307  0422  30FF               	movlw	255
  2308  0423  05A4               	andwf	___ftmul@f2+1,f
  2309  0424  3000               	movlw	0
  2310  0425  05A5               	andwf	___ftmul@f2+2,f
  2311  0426  3000               	movlw	0
  2312  0427  00AA               	movwf	___ftmul@f3_as_product
  2313  0428  3000               	movlw	0
  2314  0429  00AB               	movwf	___ftmul@f3_as_product+1
  2315  042A  3000               	movlw	0
  2316  042B  00AC               	movwf	___ftmul@f3_as_product+2
  2317  042C  3007               	movlw	7
  2318  042D  00FF               	movwf	127
  2319  042E  087F               	movf	127,w
  2320  042F  00AD               	movwf	___ftmul@cntr
  2321  0430                     l1655:
  2322  0430  1C20               	btfss	___ftmul@f1,0
  2323  0431  2C40               	goto	l1659
  2324  0432  0823               	movf	___ftmul@f2,w
  2325  0433  07AA               	addwf	___ftmul@f3_as_product,f
  2326  0434  0824               	movf	___ftmul@f2+1,w
  2327  0435  1103               	clrz
  2328  0436  1803               	skipnc
  2329  0437  0A24               	incf	___ftmul@f2+1,w
  2330  0438  1D03               	btfss	3,2
  2331  0439  07AB               	addwf	___ftmul@f3_as_product+1,f
  2332  043A  0825               	movf	___ftmul@f2+2,w
  2333  043B  1103               	clrz
  2334  043C  1803               	skipnc
  2335  043D  0A25               	incf	___ftmul@f2+2,w
  2336  043E  1D03               	btfss	3,2
  2337  043F  07AC               	addwf	___ftmul@f3_as_product+2,f
  2338  0440                     l1659:
  2339  0440  3001               	movlw	1
  2340  0441                     u1455:
  2341  0441  1003               	clrc
  2342  0442  0CA2               	rrf	___ftmul@f1+2,f
  2343  0443  0CA1               	rrf	___ftmul@f1+1,f
  2344  0444  0CA0               	rrf	___ftmul@f1,f
  2345  0445  3EFF               	addlw	-1
  2346  0446  1D03               	skipz
  2347  0447  2C41               	goto	u1455
  2348  0448  3001               	movlw	1
  2349  0449                     u1465:
  2350  0449  1003               	clrc
  2351  044A  0DA3               	rlf	___ftmul@f2,f
  2352  044B  0DA4               	rlf	___ftmul@f2+1,f
  2353  044C  0DA5               	rlf	___ftmul@f2+2,f
  2354  044D  3EFF               	addlw	-1
  2355  044E  1D03               	skipz
  2356  044F  2C49               	goto	u1465
  2357  0450  3001               	movlw	1
  2358  0451  02AD               	subwf	___ftmul@cntr,f
  2359  0452  1D03               	btfss	3,2
  2360  0453  2C30               	goto	l1655
  2361  0454  3009               	movlw	9
  2362  0455  00FF               	movwf	127
  2363  0456  087F               	movf	127,w
  2364  0457  00AD               	movwf	___ftmul@cntr
  2365  0458                     l1667:
  2366  0458  1C20               	btfss	___ftmul@f1,0
  2367  0459  2C68               	goto	l1671
  2368  045A  0823               	movf	___ftmul@f2,w
  2369  045B  07AA               	addwf	___ftmul@f3_as_product,f
  2370  045C  0824               	movf	___ftmul@f2+1,w
  2371  045D  1103               	clrz
  2372  045E  1803               	skipnc
  2373  045F  0A24               	incf	___ftmul@f2+1,w
  2374  0460  1D03               	btfss	3,2
  2375  0461  07AB               	addwf	___ftmul@f3_as_product+1,f
  2376  0462  0825               	movf	___ftmul@f2+2,w
  2377  0463  1103               	clrz
  2378  0464  1803               	skipnc
  2379  0465  0A25               	incf	___ftmul@f2+2,w
  2380  0466  1D03               	btfss	3,2
  2381  0467  07AC               	addwf	___ftmul@f3_as_product+2,f
  2382  0468                     l1671:
  2383  0468  3001               	movlw	1
  2384  0469                     u1505:
  2385  0469  1003               	clrc
  2386  046A  0CA2               	rrf	___ftmul@f1+2,f
  2387  046B  0CA1               	rrf	___ftmul@f1+1,f
  2388  046C  0CA0               	rrf	___ftmul@f1,f
  2389  046D  3EFF               	addlw	-1
  2390  046E  1D03               	skipz
  2391  046F  2C69               	goto	u1505
  2392  0470  3001               	movlw	1
  2393  0471                     u1515:
  2394  0471  1003               	clrc
  2395  0472  0CAC               	rrf	___ftmul@f3_as_product+2,f
  2396  0473  0CAB               	rrf	___ftmul@f3_as_product+1,f
  2397  0474  0CAA               	rrf	___ftmul@f3_as_product,f
  2398  0475  3EFF               	addlw	-1
  2399  0476  1D03               	skipz
  2400  0477  2C71               	goto	u1515
  2401  0478  3001               	movlw	1
  2402  0479  02AD               	subwf	___ftmul@cntr,f
  2403  047A  1D03               	btfss	3,2
  2404  047B  2C58               	goto	l1667
  2405  047C  082A               	movf	___ftmul@f3_as_product,w
  2406  047D  00F0               	movwf	___ftpack@arg
  2407  047E  082B               	movf	___ftmul@f3_as_product+1,w
  2408  047F  00F1               	movwf	___ftpack@arg+1
  2409  0480  082C               	movf	___ftmul@f3_as_product+2,w
  2410  0481  00F2               	movwf	___ftpack@arg+2
  2411  0482  0829               	movf	___ftmul@exp,w
  2412  0483  00FF               	movwf	127
  2413  0484  087F               	movf	127,w
  2414  0485  00F3               	movwf	___ftpack@exp
  2415  0486  082E               	movf	___ftmul@sign,w
  2416  0487  00FF               	movwf	127
  2417  0488  087F               	movf	127,w
  2418  0489  00F4               	movwf	___ftpack@sign
  2419  048A  120A  118A  2079   	fcall	___ftpack
  2420  048D  0870               	movf	?___ftpack,w
  2421  048E  00A0               	movwf	?___ftmul
  2422  048F  0871               	movf	?___ftpack+1,w
  2423  0490  00A1               	movwf	?___ftmul+1
  2424  0491  0872               	movf	?___ftpack+2,w
  2425  0492  00A2               	movwf	?___ftmul+2
  2426  0493  0008               	return
  2427  0494                     __end_of___ftmul:
  2428                           
  2429                           	psect	text7
  2430  0160                     __ptext7:	
  2431 ;; *************** function ___ftdiv *****************
  2432 ;; Defined at:
  2433 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdiv.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  f2              3   15[BANK0 ] float 
  2436 ;;  f1              3   18[BANK0 ] float 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  f3              3   25[BANK0 ] float 
  2439 ;;  sign            1   29[BANK0 ] unsigned char 
  2440 ;;  exp             1   28[BANK0 ] unsigned char 
  2441 ;;  cntr            1   24[BANK0 ] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  3   15[BANK0 ] float 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 300/0
  2448 ;;		On exit  : 300/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       6       0       0       0
  2452 ;;      Locals:         0       6       0       0       0
  2453 ;;      Temps:          0       3       0       0       0
  2454 ;;      Totals:         0      15       0       0       0
  2455 ;;Total ram usage:       15 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    1
  2458 ;; This function calls:
  2459 ;;		___ftpack
  2460 ;; This function is called by:
  2461 ;;		_search_channel
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function ___ftdiv
  2467  0160                     ___ftdiv:
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2471  0160  0832               	movf	___ftdiv@f1,w
  2472  0161  00B5               	movwf	??___ftdiv
  2473  0162  0833               	movf	___ftdiv@f1+1,w
  2474  0163  00B6               	movwf	??___ftdiv+1
  2475  0164  0834               	movf	___ftdiv@f1+2,w
  2476  0165  00B7               	movwf	??___ftdiv+2
  2477  0166  1003               	clrc
  2478  0167  0D36               	rlf	??___ftdiv+1,w
  2479  0168  0D37               	rlf	??___ftdiv+2,w
  2480  0169  00FF               	movwf	127
  2481  016A  087F               	movf	127,w
  2482  016B  00BC               	movwf	___ftdiv@exp
  2483  016C  083C               	movf	___ftdiv@exp,w
  2484  016D  1D03               	btfss	3,2
  2485  016E  2976               	goto	l1589
  2486  016F  3000               	movlw	0
  2487  0170  00AF               	movwf	?___ftdiv
  2488  0171  3000               	movlw	0
  2489  0172  00B0               	movwf	?___ftdiv+1
  2490  0173  3000               	movlw	0
  2491  0174  00B1               	movwf	?___ftdiv+2
  2492  0175  0008               	return
  2493  0176                     l1589:
  2494  0176  082F               	movf	___ftdiv@f2,w
  2495  0177  00B5               	movwf	??___ftdiv
  2496  0178  0830               	movf	___ftdiv@f2+1,w
  2497  0179  00B6               	movwf	??___ftdiv+1
  2498  017A  0831               	movf	___ftdiv@f2+2,w
  2499  017B  00B7               	movwf	??___ftdiv+2
  2500  017C  1003               	clrc
  2501  017D  0D36               	rlf	??___ftdiv+1,w
  2502  017E  0D37               	rlf	??___ftdiv+2,w
  2503  017F  00FF               	movwf	127
  2504  0180  087F               	movf	127,w
  2505  0181  00BD               	movwf	___ftdiv@sign
  2506  0182  083D               	movf	___ftdiv@sign,w
  2507  0183  1D03               	btfss	3,2
  2508  0184  298C               	goto	l1595
  2509  0185  3000               	movlw	0
  2510  0186  00AF               	movwf	?___ftdiv
  2511  0187  3000               	movlw	0
  2512  0188  00B0               	movwf	?___ftdiv+1
  2513  0189  3000               	movlw	0
  2514  018A  00B1               	movwf	?___ftdiv+2
  2515  018B  0008               	return
  2516  018C                     l1595:
  2517  018C  3000               	movlw	0
  2518  018D  00B9               	movwf	___ftdiv@f3
  2519  018E  3000               	movlw	0
  2520  018F  00BA               	movwf	___ftdiv@f3+1
  2521  0190  3000               	movlw	0
  2522  0191  00BB               	movwf	___ftdiv@f3+2
  2523  0192  3089               	movlw	137
  2524  0193  073D               	addwf	___ftdiv@sign,w
  2525  0194  00B5               	movwf	??___ftdiv
  2526  0195  0835               	movf	??___ftdiv,w
  2527  0196  02BC               	subwf	___ftdiv@exp,f
  2528  0197  0834               	movf	___ftdiv@f1+2,w
  2529  0198  00FF               	movwf	127
  2530  0199  087F               	movf	127,w
  2531  019A  00BD               	movwf	___ftdiv@sign
  2532  019B  0831               	movf	___ftdiv@f2+2,w
  2533  019C  00FF               	movwf	127
  2534  019D  087F               	movf	127,w
  2535  019E  06BD               	xorwf	___ftdiv@sign,f
  2536  019F  3080               	movlw	128
  2537  01A0  00FF               	movwf	127
  2538  01A1  087F               	movf	127,w
  2539  01A2  05BD               	andwf	___ftdiv@sign,f
  2540  01A3  17B3               	bsf	___ftdiv@f1+1,7
  2541  01A4  30FF               	movlw	255
  2542  01A5  05B2               	andwf	___ftdiv@f1,f
  2543  01A6  30FF               	movlw	255
  2544  01A7  05B3               	andwf	___ftdiv@f1+1,f
  2545  01A8  3000               	movlw	0
  2546  01A9  05B4               	andwf	___ftdiv@f1+2,f
  2547  01AA  17B0               	bsf	___ftdiv@f2+1,7
  2548  01AB  30FF               	movlw	255
  2549  01AC  05AF               	andwf	___ftdiv@f2,f
  2550  01AD  30FF               	movlw	255
  2551  01AE  05B0               	andwf	___ftdiv@f2+1,f
  2552  01AF  3000               	movlw	0
  2553  01B0  05B1               	andwf	___ftdiv@f2+2,f
  2554  01B1  3018               	movlw	24
  2555  01B2  00FF               	movwf	127
  2556  01B3  087F               	movf	127,w
  2557  01B4  00B8               	movwf	___ftdiv@cntr
  2558  01B5                     l1611:
  2559  01B5  3001               	movlw	1
  2560  01B6                     u1375:
  2561  01B6  1003               	clrc
  2562  01B7  0DB9               	rlf	___ftdiv@f3,f
  2563  01B8  0DBA               	rlf	___ftdiv@f3+1,f
  2564  01B9  0DBB               	rlf	___ftdiv@f3+2,f
  2565  01BA  3EFF               	addlw	-1
  2566  01BB  1D03               	skipz
  2567  01BC  29B6               	goto	u1375
  2568  01BD  0831               	movf	___ftdiv@f2+2,w
  2569  01BE  0234               	subwf	___ftdiv@f1+2,w
  2570  01BF  1D03               	skipz
  2571  01C0  29C7               	goto	u1385
  2572  01C1  0830               	movf	___ftdiv@f2+1,w
  2573  01C2  0233               	subwf	___ftdiv@f1+1,w
  2574  01C3  1D03               	skipz
  2575  01C4  29C7               	goto	u1385
  2576  01C5  082F               	movf	___ftdiv@f2,w
  2577  01C6  0232               	subwf	___ftdiv@f1,w
  2578  01C7                     u1385:
  2579  01C7  1C03               	skipc
  2580  01C8  29D4               	goto	l1617
  2581  01C9  082F               	movf	___ftdiv@f2,w
  2582  01CA  02B2               	subwf	___ftdiv@f1,f
  2583  01CB  0830               	movf	___ftdiv@f2+1,w
  2584  01CC  1C03               	skipc
  2585  01CD  0F30               	incfsz	___ftdiv@f2+1,w
  2586  01CE  02B3               	subwf	___ftdiv@f1+1,f
  2587  01CF  0831               	movf	___ftdiv@f2+2,w
  2588  01D0  1C03               	skipc
  2589  01D1  0A31               	incf	___ftdiv@f2+2,w
  2590  01D2  02B4               	subwf	___ftdiv@f1+2,f
  2591  01D3  1439               	bsf	___ftdiv@f3,0
  2592  01D4                     l1617:
  2593  01D4  3001               	movlw	1
  2594  01D5                     u1395:
  2595  01D5  1003               	clrc
  2596  01D6  0DB2               	rlf	___ftdiv@f1,f
  2597  01D7  0DB3               	rlf	___ftdiv@f1+1,f
  2598  01D8  0DB4               	rlf	___ftdiv@f1+2,f
  2599  01D9  3EFF               	addlw	-1
  2600  01DA  1D03               	skipz
  2601  01DB  29D5               	goto	u1395
  2602  01DC  3001               	movlw	1
  2603  01DD  02B8               	subwf	___ftdiv@cntr,f
  2604  01DE  1D03               	btfss	3,2
  2605  01DF  29B5               	goto	l1611
  2606  01E0  0839               	movf	___ftdiv@f3,w
  2607  01E1  00F0               	movwf	___ftpack@arg
  2608  01E2  083A               	movf	___ftdiv@f3+1,w
  2609  01E3  00F1               	movwf	___ftpack@arg+1
  2610  01E4  083B               	movf	___ftdiv@f3+2,w
  2611  01E5  00F2               	movwf	___ftpack@arg+2
  2612  01E6  083C               	movf	___ftdiv@exp,w
  2613  01E7  00FF               	movwf	127
  2614  01E8  087F               	movf	127,w
  2615  01E9  00F3               	movwf	___ftpack@exp
  2616  01EA  083D               	movf	___ftdiv@sign,w
  2617  01EB  00FF               	movwf	127
  2618  01EC  087F               	movf	127,w
  2619  01ED  00F4               	movwf	___ftpack@sign
  2620  01EE  120A  118A  2079   	fcall	___ftpack
  2621  01F1  0870               	movf	?___ftpack,w
  2622  01F2  00AF               	movwf	?___ftdiv
  2623  01F3  0871               	movf	?___ftpack+1,w
  2624  01F4  00B0               	movwf	?___ftdiv+1
  2625  01F5  0872               	movf	?___ftpack+2,w
  2626  01F6  00B1               	movwf	?___ftdiv+2
  2627  01F7  0008               	return
  2628  01F8                     __end_of___ftdiv:
  2629                           
  2630                           	psect	text8
  2631  0EE2                     __ptext8:	
  2632 ;; *************** function ___awtoft *****************
  2633 ;; Defined at:
  2634 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awtoft.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  c               2    8[COMMON] int 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  sign            1   11[COMMON] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  3    8[COMMON] float 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 300/0
  2645 ;;		On exit  : 300/0
  2646 ;;		Unchanged: 300/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         3       0       0       0       0
  2649 ;;      Locals:         1       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0
  2651 ;;      Totals:         4       0       0       0       0
  2652 ;;Total ram usage:        4 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    1
  2655 ;; This function calls:
  2656 ;;		___ftpack
  2657 ;; This function is called by:
  2658 ;;		_search_channel
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function ___awtoft
  2664  0EE2                     ___awtoft:
  2665                           
  2666                           ;incstack = 0
  2667                           ; Regs used in ___awtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2668  0EE2  01FB               	clrf	___awtoft@sign
  2669  0EE3  1FF9               	btfss	___awtoft@c+1,7
  2670  0EE4  2EEC               	goto	l1579
  2671  0EE5  09F8               	comf	___awtoft@c,f
  2672  0EE6  09F9               	comf	___awtoft@c+1,f
  2673  0EE7  0AF8               	incf	___awtoft@c,f
  2674  0EE8  1903               	skipnz
  2675  0EE9  0AF9               	incf	___awtoft@c+1,f
  2676  0EEA  01FB               	clrf	___awtoft@sign
  2677  0EEB  0AFB               	incf	___awtoft@sign,f
  2678  0EEC                     l1579:
  2679  0EEC  0878               	movf	___awtoft@c,w
  2680  0EED  00F0               	movwf	___ftpack@arg
  2681  0EEE  0879               	movf	___awtoft@c+1,w
  2682  0EEF  00F1               	movwf	___ftpack@arg+1
  2683  0EF0  01F2               	clrf	___ftpack@arg+2
  2684  0EF1  308E               	movlw	142
  2685  0EF2  00FF               	movwf	127
  2686  0EF3  087F               	movf	127,w
  2687  0EF4  00F3               	movwf	___ftpack@exp
  2688  0EF5  087B               	movf	___awtoft@sign,w
  2689  0EF6  00FF               	movwf	127
  2690  0EF7  087F               	movf	127,w
  2691  0EF8  00F4               	movwf	___ftpack@sign
  2692  0EF9  120A  118A  2079   	fcall	___ftpack
  2693  0EFC  0870               	movf	?___ftpack,w
  2694  0EFD  00F8               	movwf	?___awtoft
  2695  0EFE  0871               	movf	?___ftpack+1,w
  2696  0EFF  00F9               	movwf	?___awtoft+1
  2697  0F00  0872               	movf	?___ftpack+2,w
  2698  0F01  00FA               	movwf	?___awtoft+2
  2699  0F02  0008               	return
  2700  0F03                     __end_of___awtoft:
  2701                           
  2702                           	psect	text9
  2703  0079                     __ptext9:	
  2704 ;; *************** function ___ftpack *****************
  2705 ;; Defined at:
  2706 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\float.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  arg             3    0[COMMON] unsigned um
  2709 ;;  exp             1    3[COMMON] unsigned char 
  2710 ;;  sign            1    4[COMMON] unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  3    0[COMMON] float 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, btemp+1
  2717 ;; Tracked objects:
  2718 ;;		On entry : 300/0
  2719 ;;		On exit  : 300/0
  2720 ;;		Unchanged: 300/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2722 ;;      Params:         5       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0
  2724 ;;      Temps:          3       0       0       0       0
  2725 ;;      Totals:         8       0       0       0       0
  2726 ;;Total ram usage:        8 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		___awtoft
  2732 ;;		___ftdiv
  2733 ;;		___ftmul
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           
  2738                           ;psect for function ___ftpack
  2739  0079                     ___ftpack:
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in ___ftpack: [wreg+status,2+status,0+btemp+1]
  2743  0079  0873               	movf	___ftpack@exp,w
  2744  007A  1903               	btfsc	3,2
  2745  007B  2881               	goto	l1353
  2746  007C  0872               	movf	___ftpack@arg+2,w
  2747  007D  0471               	iorwf	___ftpack@arg+1,w
  2748  007E  0470               	iorwf	___ftpack@arg,w
  2749  007F  1D03               	skipz
  2750  0080  2894               	goto	l1361
  2751  0081                     l1353:
  2752  0081  3000               	movlw	0
  2753  0082  00F0               	movwf	?___ftpack
  2754  0083  3000               	movlw	0
  2755  0084  00F1               	movwf	?___ftpack+1
  2756  0085  3000               	movlw	0
  2757  0086  00F2               	movwf	?___ftpack+2
  2758  0087  0008               	return
  2759  0088                     l1357:
  2760  0088  3001               	movlw	1
  2761  0089  00FF               	movwf	127
  2762  008A  087F               	movf	127,w
  2763  008B  07F3               	addwf	___ftpack@exp,f
  2764  008C  3001               	movlw	1
  2765  008D                     u1025:
  2766  008D  1003               	clrc
  2767  008E  0CF2               	rrf	___ftpack@arg+2,f
  2768  008F  0CF1               	rrf	___ftpack@arg+1,f
  2769  0090  0CF0               	rrf	___ftpack@arg,f
  2770  0091  3EFF               	addlw	-1
  2771  0092  1D03               	skipz
  2772  0093  288D               	goto	u1025
  2773  0094                     l1361:
  2774  0094  30FE               	movlw	254
  2775  0095  0572               	andwf	___ftpack@arg+2,w
  2776  0096  1903               	btfsc	3,2
  2777  0097  28AF               	goto	l1369
  2778  0098  2888               	goto	l1357
  2779  0099                     l1363:
  2780  0099  3001               	movlw	1
  2781  009A  00FF               	movwf	127
  2782  009B  087F               	movf	127,w
  2783  009C  07F3               	addwf	___ftpack@exp,f
  2784  009D  3001               	movlw	1
  2785  009E  07F0               	addwf	___ftpack@arg,f
  2786  009F  3000               	movlw	0
  2787  00A0  1803               	skipnc
  2788  00A1  3001               	movlw	1
  2789  00A2  07F1               	addwf	___ftpack@arg+1,f
  2790  00A3  3000               	movlw	0
  2791  00A4  1803               	skipnc
  2792  00A5  3001               	movlw	1
  2793  00A6  07F2               	addwf	___ftpack@arg+2,f
  2794  00A7  3001               	movlw	1
  2795  00A8                     u1045:
  2796  00A8  1003               	clrc
  2797  00A9  0CF2               	rrf	___ftpack@arg+2,f
  2798  00AA  0CF1               	rrf	___ftpack@arg+1,f
  2799  00AB  0CF0               	rrf	___ftpack@arg,f
  2800  00AC  3EFF               	addlw	-1
  2801  00AD  1D03               	skipz
  2802  00AE  28A8               	goto	u1045
  2803  00AF                     l1369:
  2804  00AF  30FF               	movlw	255
  2805  00B0  0572               	andwf	___ftpack@arg+2,w
  2806  00B1  1903               	btfsc	3,2
  2807  00B2  28C2               	goto	l1373
  2808  00B3  2899               	goto	l1363
  2809  00B4                     l1375:
  2810  00B4  3002               	movlw	2
  2811  00B5  0273               	subwf	___ftpack@exp,w
  2812  00B6  1C03               	btfss	3,0
  2813  00B7  28C4               	goto	l469
  2814  00B8  3001               	movlw	1
  2815  00B9  02F3               	subwf	___ftpack@exp,f
  2816  00BA  3001               	movlw	1
  2817  00BB                     u1065:
  2818  00BB  1003               	clrc
  2819  00BC  0DF0               	rlf	___ftpack@arg,f
  2820  00BD  0DF1               	rlf	___ftpack@arg+1,f
  2821  00BE  0DF2               	rlf	___ftpack@arg+2,f
  2822  00BF  3EFF               	addlw	-1
  2823  00C0  1D03               	skipz
  2824  00C1  28BB               	goto	u1065
  2825  00C2                     l1373:
  2826  00C2  1FF1               	btfss	___ftpack@arg+1,7
  2827  00C3  28B4               	goto	l1375
  2828  00C4                     l469:
  2829  00C4  1873               	btfsc	___ftpack@exp,0
  2830  00C5  28CC               	goto	l470
  2831  00C6  30FF               	movlw	255
  2832  00C7  05F0               	andwf	___ftpack@arg,f
  2833  00C8  307F               	movlw	127
  2834  00C9  05F1               	andwf	___ftpack@arg+1,f
  2835  00CA  30FF               	movlw	255
  2836  00CB  05F2               	andwf	___ftpack@arg+2,f
  2837  00CC                     l470:
  2838  00CC  1003               	clrc
  2839  00CD  0CF3               	rrf	___ftpack@exp,f
  2840  00CE  0873               	movf	___ftpack@exp,w
  2841  00CF  00F5               	movwf	??___ftpack
  2842  00D0  01F6               	clrf	??___ftpack+1
  2843  00D1  01F7               	clrf	??___ftpack+2
  2844  00D2  3010               	movlw	16
  2845  00D3                     u1105:
  2846  00D3  1003               	clrc
  2847  00D4  0DF5               	rlf	??___ftpack,f
  2848  00D5  0DF6               	rlf	??___ftpack+1,f
  2849  00D6  0DF7               	rlf	??___ftpack+2,f
  2850  00D7  3EFF               	addlw	-1
  2851  00D8  1D03               	skipz
  2852  00D9  28D3               	goto	u1105
  2853  00DA  0875               	movf	??___ftpack,w
  2854  00DB  04F0               	iorwf	___ftpack@arg,f
  2855  00DC  0876               	movf	??___ftpack+1,w
  2856  00DD  04F1               	iorwf	___ftpack@arg+1,f
  2857  00DE  0877               	movf	??___ftpack+2,w
  2858  00DF  04F2               	iorwf	___ftpack@arg+2,f
  2859  00E0  0874               	movf	___ftpack@sign,w
  2860  00E1  1903               	btfsc	3,2
  2861  00E2  0008               	return
  2862  00E3  17F2               	bsf	___ftpack@arg+2,7
  2863  00E4  0008               	return
  2864  00E5                     __end_of___ftpack:
  2865                           
  2866                           	psect	text10
  2867  0F71                     __ptext10:	
  2868 ;; *************** function _INI *****************
  2869 ;; Defined at:
  2870 ;;		line 37 in file "MAIN.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : B00/0
  2881 ;;		On exit  : 300/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          3       0       0       0       0
  2887 ;;      Totals:         3       0       0       0       0
  2888 ;;Total ram usage:        3 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    2
  2891 ;; This function calls:
  2892 ;;		_Lcd_Command
  2893 ;;		_Lcd_ConstText
  2894 ;;		_Lcd_Init
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _INI
  2902  0F71                     _INI:
  2903                           
  2904                           ;MAIN.c: 39: Lcd_Init();
  2905                           
  2906                           ;incstack = 0
  2907                           ; Regs used in _INI: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2908  0F71  120A  118A  2336  120A  158A  	fcall	_Lcd_Init
  2909                           
  2910                           ;MAIN.c: 40: Lcd_Command(1);
  2911  0F76  3001               	movlw	1
  2912  0F77  120A  118A  21F8  120A  158A  	fcall	_Lcd_Command
  2913                           
  2914                           ;MAIN.c: 41: Lcd_Command(12);
  2915  0F7C  300C               	movlw	12
  2916  0F7D  120A  118A  21F8  120A  158A  	fcall	_Lcd_Command
  2917                           
  2918                           ;MAIN.c: 42: Lcd_ConstText (1, 5, "DIGITALES 2");
  2919  0F82  3005               	movlw	5
  2920  0F83  00FF               	movwf	127
  2921  0F84  087F               	movf	127,w
  2922  0F85  00F3               	movwf	Lcd_ConstText@x
  2923  0F86  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2924  0F87  00F4               	movwf	Lcd_ConstText@buffer
  2925  0F88  3080               	movlw	128
  2926  0F89  00F5               	movwf	Lcd_ConstText@buffer+1
  2927  0F8A  3001               	movlw	1
  2928  0F8B  120A  158A  27B8  120A  158A  	fcall	_Lcd_ConstText
  2929                           
  2930                           ;MAIN.c: 43: Lcd_ConstText (2, 7, "HARITOL");
  2931  0F90  3007               	movlw	7
  2932  0F91  00FF               	movwf	127
  2933  0F92  087F               	movf	127,w
  2934  0F93  00F3               	movwf	Lcd_ConstText@x
  2935  0F94  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2936  0F95  00F4               	movwf	Lcd_ConstText@buffer
  2937  0F96  3080               	movlw	128
  2938  0F97  00F5               	movwf	Lcd_ConstText@buffer+1
  2939  0F98  3002               	movlw	2
  2940  0F99  120A  158A  27B8  120A  158A  	fcall	_Lcd_ConstText
  2941                           
  2942                           ;MAIN.c: 44: _delay((unsigned long)((2000)*(20000000/4000.0)));
  2943  0F9E  3033               	movlw	51
  2944  0F9F  00FA               	movwf	??_INI+2
  2945  0FA0  30BB               	movlw	187
  2946  0FA1  00F9               	movwf	??_INI+1
  2947  0FA2  30DF               	movlw	223
  2948  0FA3  00F8               	movwf	??_INI
  2949  0FA4                     u1817:
  2950  0FA4  0BF8               	decfsz	??_INI,f
  2951  0FA5  2FA4               	goto	u1817
  2952  0FA6  0BF9               	decfsz	??_INI+1,f
  2953  0FA7  2FA4               	goto	u1817
  2954  0FA8  0BFA               	decfsz	??_INI+2,f
  2955  0FA9  2FA4               	goto	u1817
  2956  0FAA  2FAB               	nop2
  2957                           
  2958                           ;MAIN.c: 45: ADCON1 = 0b10000000;
  2959  0FAB  3080               	movlw	128
  2960  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  2961  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  2962  0FAE  009F               	movwf	31	;volatile
  2963                           
  2964                           ;MAIN.c: 46: nRBPU = 0;
  2965  0FAF  1381               	bcf	1,7	;volatile
  2966                           
  2967                           ;MAIN.c: 47: TRISB = 0xFF;
  2968  0FB0  30FF               	movlw	255
  2969  0FB1  0086               	movwf	6	;volatile
  2970                           
  2971                           ;MAIN.c: 48: TRISD = 0x00;
  2972  0FB2  0188               	clrf	8	;volatile
  2973                           
  2974                           ;MAIN.c: 49: PORTDbits.RD0 = 0;
  2975  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0FB4  1008               	bcf	8,0	;volatile
  2977                           
  2978                           ;MAIN.c: 50: PORTBbits.RB0 = 1;
  2979  0FB5  1406               	bsf	6,0	;volatile
  2980                           
  2981                           ;MAIN.c: 51: PORTBbits.RB1 = 1;
  2982  0FB6  1486               	bsf	6,1	;volatile
  2983  0FB7  0008               	return
  2984  0FB8                     __end_of_INI:
  2985                           
  2986                           	psect	text11
  2987  0336                     __ptext11:	
  2988 ;; *************** function _Lcd_Init *****************
  2989 ;; Defined at:
  2990 ;;		line 17 in file "lcd_hd44780.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  data            1    5[COMMON] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : B00/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         0       0       0       0       0
  3005 ;;      Locals:         1       0       0       0       0
  3006 ;;      Temps:          2       0       0       0       0
  3007 ;;      Totals:         3       0       0       0       0
  3008 ;;Total ram usage:        3 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    1
  3011 ;; This function calls:
  3012 ;;		_Lcd_Command
  3013 ;; This function is called by:
  3014 ;;		_INI
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _Lcd_Init
  3020  0336                     _Lcd_Init:
  3021                           
  3022                           ;lcd_hd44780.c: 18: unsigned char data;;lcd_hd44780.c: 19: TRISCbits.TRISC0 = 0; TRISCbi
      +                          ts.TRISC1 = 0; TRISCbits.TRISC2 = 0; TRISCbits.TRISC3 = 0; TRISCbits.TRISC4 = 0; TRISCbi
      +                          ts.TRISC5 = 0;
  3023                           
  3024                           ;incstack = 0
  3025                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3026  0336  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0337  1007               	bcf	7,0	;volatile
  3028  0338  1087               	bcf	7,1	;volatile
  3029  0339  1107               	bcf	7,2	;volatile
  3030  033A  1187               	bcf	7,3	;volatile
  3031  033B  1207               	bcf	7,4	;volatile
  3032  033C  1287               	bcf	7,5	;volatile
  3033                           
  3034                           ;lcd_hd44780.c: 20: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 0; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  3035  033D  1283               	bcf	3,5	;RP0=0, select bank0
  3036  033E  1007               	bcf	7,0	;volatile
  3037  033F  1087               	bcf	7,1	;volatile
  3038  0340  1107               	bcf	7,2	;volatile
  3039  0341  1187               	bcf	7,3	;volatile
  3040  0342  1207               	bcf	7,4	;volatile
  3041  0343  1287               	bcf	7,5	;volatile
  3042                           
  3043                           ;lcd_hd44780.c: 21: _delay((unsigned long)((5500)*(20000000/4000000.0)));_delay((unsigne
      +                          d long)((5500)*(20000000/4000000.0)));_delay((unsigned long)((5500)*(20000000/4000000.0)
      +                          ));
  3044  0344  3024               	movlw	36
  3045  0345  00F4               	movwf	??_Lcd_Init+1
  3046  0346  30B5               	movlw	181
  3047  0347  00F3               	movwf	??_Lcd_Init
  3048  0348                     u1827:
  3049  0348  0BF3               	decfsz	??_Lcd_Init,f
  3050  0349  2B48               	goto	u1827
  3051  034A  0BF4               	decfsz	??_Lcd_Init+1,f
  3052  034B  2B48               	goto	u1827
  3053  034C  2B4D               	nop2
  3054  034D  3024               	movlw	36
  3055  034E  00F4               	movwf	??_Lcd_Init+1
  3056  034F  30B5               	movlw	181
  3057  0350  00F3               	movwf	??_Lcd_Init
  3058  0351                     u1837:
  3059  0351  0BF3               	decfsz	??_Lcd_Init,f
  3060  0352  2B51               	goto	u1837
  3061  0353  0BF4               	decfsz	??_Lcd_Init+1,f
  3062  0354  2B51               	goto	u1837
  3063  0355  2B56               	nop2
  3064  0356  3024               	movlw	36
  3065  0357  00F4               	movwf	??_Lcd_Init+1
  3066  0358  30B5               	movlw	181
  3067  0359  00F3               	movwf	??_Lcd_Init
  3068  035A                     u1847:
  3069  035A  0BF3               	decfsz	??_Lcd_Init,f
  3070  035B  2B5A               	goto	u1847
  3071  035C  0BF4               	decfsz	??_Lcd_Init+1,f
  3072  035D  2B5A               	goto	u1847
  3073  035E  2B5F               	nop2
  3074                           
  3075                           ;lcd_hd44780.c: 22: _delay((unsigned long)((5500)*(20000000/4000000.0)));_delay((unsigne
      +                          d long)((5500)*(20000000/4000000.0)));_delay((unsigned long)((5500)*(20000000/4000000.0)
      +                          ));
  3076  035F  3024               	movlw	36
  3077  0360  00F4               	movwf	??_Lcd_Init+1
  3078  0361  30B5               	movlw	181
  3079  0362  00F3               	movwf	??_Lcd_Init
  3080  0363                     u1857:
  3081  0363  0BF3               	decfsz	??_Lcd_Init,f
  3082  0364  2B63               	goto	u1857
  3083  0365  0BF4               	decfsz	??_Lcd_Init+1,f
  3084  0366  2B63               	goto	u1857
  3085  0367  2B68               	nop2
  3086  0368  3024               	movlw	36
  3087  0369  00F4               	movwf	??_Lcd_Init+1
  3088  036A  30B5               	movlw	181
  3089  036B  00F3               	movwf	??_Lcd_Init
  3090  036C                     u1867:
  3091  036C  0BF3               	decfsz	??_Lcd_Init,f
  3092  036D  2B6C               	goto	u1867
  3093  036E  0BF4               	decfsz	??_Lcd_Init+1,f
  3094  036F  2B6C               	goto	u1867
  3095  0370  2B71               	nop2
  3096  0371  3024               	movlw	36
  3097  0372  00F4               	movwf	??_Lcd_Init+1
  3098  0373  30B5               	movlw	181
  3099  0374  00F3               	movwf	??_Lcd_Init
  3100  0375                     u1877:
  3101  0375  0BF3               	decfsz	??_Lcd_Init,f
  3102  0376  2B75               	goto	u1877
  3103  0377  0BF4               	decfsz	??_Lcd_Init+1,f
  3104  0378  2B75               	goto	u1877
  3105  0379  2B7A               	nop2
  3106                           
  3107                           ;lcd_hd44780.c: 24: for(data = 1; data < 4; data ++)
  3108  037A  01F5               	clrf	Lcd_Init@data
  3109  037B  0AF5               	incf	Lcd_Init@data,f
  3110  037C                     l105:
  3111                           
  3112                           ;lcd_hd44780.c: 25: {;lcd_hd44780.c: 26: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits
      +                          .RC2 = 1; PORTCbits.RC3 = 1; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  3113  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3114  037D  1303               	bcf	3,6	;RP1=0, select bank0
  3115  037E  1007               	bcf	7,0	;volatile
  3116  037F  1087               	bcf	7,1	;volatile
  3117  0380  1507               	bsf	7,2	;volatile
  3118  0381  1587               	bsf	7,3	;volatile
  3119  0382  1207               	bcf	7,4	;volatile
  3120  0383  1287               	bcf	7,5	;volatile
  3121                           
  3122                           ;lcd_hd44780.c: 27: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.R
      +                          C3 = 1; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  3123  0384  1007               	bcf	7,0	;volatile
  3124  0385  1087               	bcf	7,1	;volatile
  3125  0386  1507               	bsf	7,2	;volatile
  3126  0387  1587               	bsf	7,3	;volatile
  3127  0388  1607               	bsf	7,4	;volatile
  3128  0389  1287               	bcf	7,5	;volatile
  3129                           
  3130                           ;lcd_hd44780.c: 28: _delay((unsigned long)((5)*(20000000/4000000.0)));
  3131  038A  3008               	movlw	8
  3132  038B  00F3               	movwf	??_Lcd_Init
  3133  038C                     u1887:
  3134  038C  0BF3               	decfsz	??_Lcd_Init,f
  3135  038D  2B8C               	goto	u1887
  3136                           
  3137                           ;lcd_hd44780.c: 29: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.R
      +                          C3 = 1; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  3138  038E  1283               	bcf	3,5	;RP0=0, select bank0
  3139  038F  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0390  1007               	bcf	7,0	;volatile
  3141  0391  1087               	bcf	7,1	;volatile
  3142  0392  1507               	bsf	7,2	;volatile
  3143  0393  1587               	bsf	7,3	;volatile
  3144  0394  1207               	bcf	7,4	;volatile
  3145  0395  1287               	bcf	7,5	;volatile
  3146                           
  3147                           ;lcd_hd44780.c: 30: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  3148  0396  3024               	movlw	36
  3149  0397  00F4               	movwf	??_Lcd_Init+1
  3150  0398  30B5               	movlw	181
  3151  0399  00F3               	movwf	??_Lcd_Init
  3152  039A                     u1897:
  3153  039A  0BF3               	decfsz	??_Lcd_Init,f
  3154  039B  2B9A               	goto	u1897
  3155  039C  0BF4               	decfsz	??_Lcd_Init+1,f
  3156  039D  2B9A               	goto	u1897
  3157  039E  2B9F               	nop2
  3158  039F  3001               	movlw	1
  3159  03A0  00FF               	movwf	127
  3160  03A1  087F               	movf	127,w
  3161  03A2  07F5               	addwf	Lcd_Init@data,f
  3162  03A3  3004               	movlw	4
  3163  03A4  0275               	subwf	Lcd_Init@data,w
  3164  03A5  1C03               	skipc
  3165  03A6  2B7C               	goto	l105
  3166                           
  3167                           ;lcd_hd44780.c: 31: };lcd_hd44780.c: 32: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits
      +                          .RC2 = 1; PORTCbits.RC3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  3168  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  3169  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  3170  03A9  1007               	bcf	7,0	;volatile
  3171  03AA  1087               	bcf	7,1	;volatile
  3172  03AB  1507               	bsf	7,2	;volatile
  3173  03AC  1187               	bcf	7,3	;volatile
  3174  03AD  1207               	bcf	7,4	;volatile
  3175  03AE  1287               	bcf	7,5	;volatile
  3176                           
  3177                           ;lcd_hd44780.c: 33: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  3178  03AF  1007               	bcf	7,0	;volatile
  3179  03B0  1087               	bcf	7,1	;volatile
  3180  03B1  1507               	bsf	7,2	;volatile
  3181  03B2  1187               	bcf	7,3	;volatile
  3182  03B3  1607               	bsf	7,4	;volatile
  3183  03B4  1287               	bcf	7,5	;volatile
  3184                           
  3185                           ;lcd_hd44780.c: 34: _delay((unsigned long)((5)*(20000000/4000000.0)));
  3186  03B5  3008               	movlw	8
  3187  03B6  00F3               	movwf	??_Lcd_Init
  3188  03B7                     u1907:
  3189  03B7  0BF3               	decfsz	??_Lcd_Init,f
  3190  03B8  2BB7               	goto	u1907
  3191                           
  3192                           ;lcd_hd44780.c: 35: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  3193  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3194  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3195  03BB  1007               	bcf	7,0	;volatile
  3196  03BC  1087               	bcf	7,1	;volatile
  3197  03BD  1507               	bsf	7,2	;volatile
  3198  03BE  1187               	bcf	7,3	;volatile
  3199  03BF  1207               	bcf	7,4	;volatile
  3200  03C0  1287               	bcf	7,5	;volatile
  3201                           
  3202                           ;lcd_hd44780.c: 36: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  3203  03C1  3024               	movlw	36
  3204  03C2  00F4               	movwf	??_Lcd_Init+1
  3205  03C3  30B5               	movlw	181
  3206  03C4  00F3               	movwf	??_Lcd_Init
  3207  03C5                     u1917:
  3208  03C5  0BF3               	decfsz	??_Lcd_Init,f
  3209  03C6  2BC5               	goto	u1917
  3210  03C7  0BF4               	decfsz	??_Lcd_Init+1,f
  3211  03C8  2BC5               	goto	u1917
  3212  03C9  2BCA               	nop2
  3213  03CA  3028               	movlw	40
  3214  03CB  120A  118A  21F8  120A  118A  	fcall	_Lcd_Command
  3215  03D0  3010               	movlw	16
  3216  03D1  120A  118A  21F8  120A  118A  	fcall	_Lcd_Command
  3217  03D6  3001               	movlw	1
  3218  03D7  120A  118A  21F8  120A  118A  	fcall	_Lcd_Command
  3219  03DC  300F               	movlw	15
  3220  03DD  120A  118A  21F8   	fcall	_Lcd_Command
  3221  03E0  0008               	return
  3222  03E1                     __end_of_Lcd_Init:
  3223                           
  3224                           	psect	text12
  3225  0FB8                     __ptext12:	
  3226 ;; *************** function _Lcd_ConstText *****************
  3227 ;; Defined at:
  3228 ;;		line 49 in file "lcd_hd44780.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  y               1    wreg     unsigned char 
  3231 ;;  x               1    3[COMMON] unsigned char 
  3232 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  3233 ;;		 -> STR_12(10), STR_11(14), STR_10(11), TIEM(6), 
  3234 ;;		 -> STR_7(4), STR_6(8), STR_5(6), SEN2(6), 
  3235 ;;		 -> SEN1(6), STR_2(8), STR_1(12), 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  y               1    6[COMMON] unsigned char 
  3238 ;;  data            1    7[COMMON] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 300/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         3       0       0       0       0
  3249 ;;      Locals:         2       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0
  3251 ;;      Totals:         5       0       0       0       0
  3252 ;;Total ram usage:        5 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    1
  3255 ;; This function calls:
  3256 ;;		_Lcd_CharCP
  3257 ;;		_Lcd_Command
  3258 ;; This function is called by:
  3259 ;;		_INI
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function _Lcd_ConstText
  3266  0FB8                     _Lcd_ConstText:
  3267                           
  3268                           ;incstack = 0
  3269                           ; Regs used in _Lcd_ConstText: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3270                           ;Lcd_ConstText@y stored from wreg
  3271  0FB8  00F6               	movwf	Lcd_ConstText@y
  3272                           
  3273                           ;lcd_hd44780.c: 50: unsigned char data;;lcd_hd44780.c: 51: switch(y)
  3274  0FB9  2FC9               	goto	l1501
  3275  0FBA                     l1491:
  3276  0FBA  0873               	movf	Lcd_ConstText@x,w
  3277  0FBB  3E7F               	addlw	127
  3278  0FBC  2FC5               	goto	L5
  3279  0FBD                     l1493:
  3280  0FBD  0873               	movf	Lcd_ConstText@x,w
  3281  0FBE  3EBF               	addlw	191
  3282  0FBF  2FC5               	goto	L5
  3283  0FC0                     l1495:
  3284  0FC0  0873               	movf	Lcd_ConstText@x,w
  3285  0FC1  3E93               	addlw	147
  3286  0FC2  2FC5               	goto	L5
  3287  0FC3                     l1497:
  3288  0FC3  0873               	movf	Lcd_ConstText@x,w
  3289  0FC4  3ED3               	addlw	211
  3290  0FC5                     L5:
  3291  0FC5  00FF               	movwf	127
  3292  0FC6  087F               	movf	127,w
  3293  0FC7  00F7               	movwf	Lcd_ConstText@data
  3294  0FC8  2FD7               	goto	l1503
  3295  0FC9                     l1501:
  3296  0FC9  0876               	movf	Lcd_ConstText@y,w
  3297                           
  3298                           ; Switch size 1, requested type "simple"
  3299                           ; Number of cases is 4, Range of values is 1 to 4
  3300                           ; switch strategies available:
  3301                           ; Name         Instructions Cycles
  3302                           ; simple_byte           13     7 (average)
  3303                           ; direct_byte           23    11 (fixed)
  3304                           ; jumptable            263     9 (fixed)
  3305                           ;	Chosen strategy is simple_byte
  3306  0FCA  3A01               	xorlw	1	; case 1
  3307  0FCB  1903               	skipnz
  3308  0FCC  2FBA               	goto	l1491
  3309  0FCD  3A03               	xorlw	3	; case 2
  3310  0FCE  1903               	skipnz
  3311  0FCF  2FBD               	goto	l1493
  3312  0FD0  3A01               	xorlw	1	; case 3
  3313  0FD1  1903               	skipnz
  3314  0FD2  2FC0               	goto	l1495
  3315  0FD3  3A07               	xorlw	7	; case 4
  3316  0FD4  1903               	skipnz
  3317  0FD5  2FC3               	goto	l1497
  3318  0FD6  2FD7               	goto	l1503
  3319  0FD7                     l1503:
  3320                           
  3321                           ;lcd_hd44780.c: 59: Lcd_Command(data);
  3322  0FD7  0877               	movf	Lcd_ConstText@data,w
  3323  0FD8  120A  118A  21F8  120A  158A  	fcall	_Lcd_Command
  3324  0FDD                     l1509:	
  3325                           ;lcd_hd44780.c: 60: while(*buffer)
  3326                           
  3327  0FDD  0875               	movf	Lcd_ConstText@buffer+1,w
  3328  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0FE0  00FF               	movwf	127
  3331  0FE1  0874               	movf	Lcd_ConstText@buffer,w
  3332  0FE2  0084               	movwf	4
  3333  0FE3  120A  118A  2003  120A  158A  	fcall	stringtab
  3334  0FE8  3A00               	xorlw	0
  3335  0FE9  1903               	btfsc	3,2
  3336  0FEA  0008               	return
  3337                           
  3338                           ;lcd_hd44780.c: 61: {;lcd_hd44780.c: 62: Lcd_CharCP(*buffer);
  3339  0FEB  0875               	movf	Lcd_ConstText@buffer+1,w
  3340  0FEC  00FF               	movwf	127
  3341  0FED  0874               	movf	Lcd_ConstText@buffer,w
  3342  0FEE  0084               	movwf	4
  3343  0FEF  120A  118A  2003  120A  158A  	fcall	stringtab
  3344  0FF4  120A  118A  2296  120A  158A  	fcall	_Lcd_CharCP
  3345                           
  3346                           ;lcd_hd44780.c: 63: buffer++;
  3347  0FF9  3001               	movlw	1
  3348  0FFA  07F4               	addwf	Lcd_ConstText@buffer,f
  3349  0FFB  1803               	skipnc
  3350  0FFC  0AF5               	incf	Lcd_ConstText@buffer+1,f
  3351  0FFD  3000               	movlw	0
  3352  0FFE  07F5               	addwf	Lcd_ConstText@buffer+1,f
  3353  0FFF  2FDD               	goto	l1509
  3354  1000                     __end_of_Lcd_ConstText:
  3355                           
  3356                           	psect	text13
  3357  01F8                     __ptext13:	
  3358 ;; *************** function _Lcd_Command *****************
  3359 ;; Defined at:
  3360 ;;		line 108 in file "lcd_hd44780.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  command         1    wreg     unsigned char 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  command         1    2[COMMON] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3374 ;;      Params:         0       0       0       0       0
  3375 ;;      Locals:         1       0       0       0       0
  3376 ;;      Temps:          2       0       0       0       0
  3377 ;;      Totals:         3       0       0       0       0
  3378 ;;Total ram usage:        3 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_INI
  3384 ;;		_main
  3385 ;;		_Lcd_Init
  3386 ;;		_Lcd_ConstText
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           
  3391                           ;psect for function _Lcd_Command
  3392  01F8                     _Lcd_Command:
  3393                           
  3394                           ;incstack = 0
  3395                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0]
  3396                           ;Lcd_Command@command stored from wreg
  3397  01F8  00F2               	movwf	Lcd_Command@command
  3398                           
  3399                           ;lcd_hd44780.c: 109: PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  3400  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3401  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3402  01FB  1207               	bcf	7,4	;volatile
  3403  01FC  1287               	bcf	7,5	;volatile
  3404                           
  3405                           ;lcd_hd44780.c: 110: PORTCbits.RC0 = (unsigned char)((command & 0b10000000)>>7); PORTCbi
      +                          ts.RC1 = (unsigned char)((command & 0b01000000)>>6);
  3406  01FD  0872               	movf	Lcd_Command@command,w
  3407  01FE  00F0               	movwf	??_Lcd_Command
  3408  01FF  3007               	movlw	7
  3409  0200                     u885:
  3410  0200  1003               	clrc
  3411  0201  0CF0               	rrf	??_Lcd_Command,f
  3412  0202  3EFF               	addlw	-1
  3413  0203  1D03               	skipz
  3414  0204  2A00               	goto	u885
  3415  0205  3001               	movlw	1
  3416  0206  0570               	andwf	??_Lcd_Command,w
  3417  0207  00F1               	movwf	??_Lcd_Command+1
  3418  0208  0807               	movf	7,w	;volatile
  3419  0209  0671               	xorwf	??_Lcd_Command+1,w
  3420  020A  39FE               	andlw	-2
  3421  020B  0671               	xorwf	??_Lcd_Command+1,w
  3422  020C  0087               	movwf	7	;volatile
  3423  020D  0872               	movf	Lcd_Command@command,w
  3424  020E  00F0               	movwf	??_Lcd_Command
  3425  020F  3006               	movlw	6
  3426  0210                     u895:
  3427  0210  1003               	clrc
  3428  0211  0CF0               	rrf	??_Lcd_Command,f
  3429  0212  3EFF               	addlw	-1
  3430  0213  1D03               	skipz
  3431  0214  2A10               	goto	u895
  3432  0215  0870               	movf	??_Lcd_Command,w
  3433  0216  3901               	andlw	1
  3434  0217  00F1               	movwf	??_Lcd_Command+1
  3435  0218  0DF1               	rlf	??_Lcd_Command+1,f
  3436  0219  0807               	movf	7,w	;volatile
  3437  021A  0671               	xorwf	??_Lcd_Command+1,w
  3438  021B  39FD               	andlw	-3
  3439  021C  0671               	xorwf	??_Lcd_Command+1,w
  3440  021D  0087               	movwf	7	;volatile
  3441                           
  3442                           ;lcd_hd44780.c: 111: PORTCbits.RC2 = (unsigned char)((command & 0b00100000)>>5); PORTCbi
      +                          ts.RC3 = (unsigned char)((command & 0b00010000)>>4);
  3443  021E  0872               	movf	Lcd_Command@command,w
  3444  021F  00F0               	movwf	??_Lcd_Command
  3445  0220  3005               	movlw	5
  3446  0221                     u905:
  3447  0221  1003               	clrc
  3448  0222  0CF0               	rrf	??_Lcd_Command,f
  3449  0223  3EFF               	addlw	-1
  3450  0224  1D03               	skipz
  3451  0225  2A21               	goto	u905
  3452  0226  0870               	movf	??_Lcd_Command,w
  3453  0227  3901               	andlw	1
  3454  0228  00F1               	movwf	??_Lcd_Command+1
  3455  0229  0DF1               	rlf	??_Lcd_Command+1,f
  3456  022A  0DF1               	rlf	??_Lcd_Command+1,f
  3457  022B  0807               	movf	7,w	;volatile
  3458  022C  0671               	xorwf	??_Lcd_Command+1,w
  3459  022D  39FB               	andlw	-5
  3460  022E  0671               	xorwf	??_Lcd_Command+1,w
  3461  022F  0087               	movwf	7	;volatile
  3462  0230  0872               	movf	Lcd_Command@command,w
  3463  0231  00F0               	movwf	??_Lcd_Command
  3464  0232  3004               	movlw	4
  3465  0233                     u915:
  3466  0233  1003               	clrc
  3467  0234  0CF0               	rrf	??_Lcd_Command,f
  3468  0235  3EFF               	addlw	-1
  3469  0236  1D03               	skipz
  3470  0237  2A33               	goto	u915
  3471  0238  0870               	movf	??_Lcd_Command,w
  3472  0239  3901               	andlw	1
  3473  023A  00F1               	movwf	??_Lcd_Command+1
  3474  023B  0DF1               	rlf	??_Lcd_Command+1,f
  3475  023C  0DF1               	rlf	??_Lcd_Command+1,f
  3476  023D  0DF1               	rlf	??_Lcd_Command+1,f
  3477  023E  0807               	movf	7,w	;volatile
  3478  023F  0671               	xorwf	??_Lcd_Command+1,w
  3479  0240  39F7               	andlw	-9
  3480  0241  0671               	xorwf	??_Lcd_Command+1,w
  3481  0242  0087               	movwf	7	;volatile
  3482                           
  3483                           ;lcd_hd44780.c: 113: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(20000000/4000000.0))
      +                          ); PORTCbits.RC4 = 0;
  3484  0243  1607               	bsf	7,4	;volatile
  3485  0244  3008               	movlw	8
  3486  0245  00F0               	movwf	??_Lcd_Command
  3487  0246                     u1927:
  3488  0246  0BF0               	decfsz	??_Lcd_Command,f
  3489  0247  2A46               	goto	u1927
  3490  0248  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0249  1303               	bcf	3,6	;RP1=0, select bank0
  3492  024A  1207               	bcf	7,4	;volatile
  3493                           
  3494                           ;lcd_hd44780.c: 114: PORTCbits.RC0 = (unsigned char)((command & 0b00001000)>>3); PORTCbi
      +                          ts.RC1 = (unsigned char)((command & 0b00000100)>>2);
  3495  024B  0872               	movf	Lcd_Command@command,w
  3496  024C  00F0               	movwf	??_Lcd_Command
  3497  024D  3003               	movlw	3
  3498  024E                     u925:
  3499  024E  1003               	clrc
  3500  024F  0CF0               	rrf	??_Lcd_Command,f
  3501  0250  3EFF               	addlw	-1
  3502  0251  1D03               	skipz
  3503  0252  2A4E               	goto	u925
  3504  0253  3001               	movlw	1
  3505  0254  0570               	andwf	??_Lcd_Command,w
  3506  0255  00F1               	movwf	??_Lcd_Command+1
  3507  0256  0807               	movf	7,w	;volatile
  3508  0257  0671               	xorwf	??_Lcd_Command+1,w
  3509  0258  39FE               	andlw	-2
  3510  0259  0671               	xorwf	??_Lcd_Command+1,w
  3511  025A  0087               	movwf	7	;volatile
  3512  025B  0872               	movf	Lcd_Command@command,w
  3513  025C  00F0               	movwf	??_Lcd_Command
  3514  025D  3002               	movlw	2
  3515  025E                     u935:
  3516  025E  1003               	clrc
  3517  025F  0CF0               	rrf	??_Lcd_Command,f
  3518  0260  3EFF               	addlw	-1
  3519  0261  1D03               	skipz
  3520  0262  2A5E               	goto	u935
  3521  0263  0870               	movf	??_Lcd_Command,w
  3522  0264  3901               	andlw	1
  3523  0265  00F1               	movwf	??_Lcd_Command+1
  3524  0266  0DF1               	rlf	??_Lcd_Command+1,f
  3525  0267  0807               	movf	7,w	;volatile
  3526  0268  0671               	xorwf	??_Lcd_Command+1,w
  3527  0269  39FD               	andlw	-3
  3528  026A  0671               	xorwf	??_Lcd_Command+1,w
  3529  026B  0087               	movwf	7	;volatile
  3530                           
  3531                           ;lcd_hd44780.c: 115: PORTCbits.RC2 = (unsigned char)((command & 0b00000010)>>1); PORTCbi
      +                          ts.RC3 = (unsigned char)((command & 0b00000001));
  3532  026C  0872               	movf	Lcd_Command@command,w
  3533  026D  00F0               	movwf	??_Lcd_Command
  3534  026E  1003               	clrc
  3535  026F  0C70               	rrf	??_Lcd_Command,w
  3536  0270  3901               	andlw	1
  3537  0271  00F1               	movwf	??_Lcd_Command+1
  3538  0272  0DF1               	rlf	??_Lcd_Command+1,f
  3539  0273  0DF1               	rlf	??_Lcd_Command+1,f
  3540  0274  0807               	movf	7,w	;volatile
  3541  0275  0671               	xorwf	??_Lcd_Command+1,w
  3542  0276  39FB               	andlw	-5
  3543  0277  0671               	xorwf	??_Lcd_Command+1,w
  3544  0278  0087               	movwf	7	;volatile
  3545  0279  0872               	movf	Lcd_Command@command,w
  3546  027A  3901               	andlw	1
  3547  027B  00F0               	movwf	??_Lcd_Command
  3548  027C  0DF0               	rlf	??_Lcd_Command,f
  3549  027D  0DF0               	rlf	??_Lcd_Command,f
  3550  027E  0DF0               	rlf	??_Lcd_Command,f
  3551  027F  0807               	movf	7,w	;volatile
  3552  0280  0670               	xorwf	??_Lcd_Command,w
  3553  0281  39F7               	andlw	-9
  3554  0282  0670               	xorwf	??_Lcd_Command,w
  3555  0283  0087               	movwf	7	;volatile
  3556                           
  3557                           ;lcd_hd44780.c: 117: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(20000000/4000000.0))
      +                          ); PORTCbits.RC4 = 0;
  3558  0284  1607               	bsf	7,4	;volatile
  3559  0285  3008               	movlw	8
  3560  0286  00F0               	movwf	??_Lcd_Command
  3561  0287                     u1937:
  3562  0287  0BF0               	decfsz	??_Lcd_Command,f
  3563  0288  2A87               	goto	u1937
  3564  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3565  028A  1303               	bcf	3,6	;RP1=0, select bank0
  3566  028B  1207               	bcf	7,4	;volatile
  3567                           
  3568                           ;lcd_hd44780.c: 118: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  3569  028C  3024               	movlw	36
  3570  028D  00F1               	movwf	??_Lcd_Command+1
  3571  028E  30B5               	movlw	181
  3572  028F  00F0               	movwf	??_Lcd_Command
  3573  0290                     u1947:
  3574  0290  0BF0               	decfsz	??_Lcd_Command,f
  3575  0291  2A90               	goto	u1947
  3576  0292  0BF1               	decfsz	??_Lcd_Command+1,f
  3577  0293  2A90               	goto	u1947
  3578  0294  2A95               	nop2
  3579  0295  0008               	return
  3580  0296                     __end_of_Lcd_Command:
  3581                           
  3582                           	psect	text14
  3583  0296                     __ptext14:	
  3584 ;; *************** function _Lcd_CharCP *****************
  3585 ;; Defined at:
  3586 ;;		line 91 in file "lcd_hd44780.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  c               1    wreg     unsigned char 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  c               1    2[COMMON] unsigned char 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 300/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       0       0       0       0
  3601 ;;      Locals:         1       0       0       0       0
  3602 ;;      Temps:          2       0       0       0       0
  3603 ;;      Totals:         3       0       0       0       0
  3604 ;;Total ram usage:        3 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_Lcd_ConstText
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _Lcd_CharCP
  3615  0296                     _Lcd_CharCP:
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0]
  3619                           ;Lcd_CharCP@c stored from wreg
  3620  0296  00F2               	movwf	Lcd_CharCP@c
  3621                           
  3622                           ;lcd_hd44780.c: 92: PORTCbits.RC4 = 0; PORTCbits.RC5 = 1;
  3623  0297  1207               	bcf	7,4	;volatile
  3624  0298  1687               	bsf	7,5	;volatile
  3625                           
  3626                           ;lcd_hd44780.c: 93: PORTCbits.RC0 = (unsigned char)((c & 0b10000000)>>7); PORTCbits.RC1 
      +                          = (unsigned char)((c & 0b01000000)>>6);
  3627  0299  0872               	movf	Lcd_CharCP@c,w
  3628  029A  00F0               	movwf	??_Lcd_CharCP
  3629  029B  3007               	movlw	7
  3630  029C                     u945:
  3631  029C  1003               	clrc
  3632  029D  0CF0               	rrf	??_Lcd_CharCP,f
  3633  029E  3EFF               	addlw	-1
  3634  029F  1D03               	skipz
  3635  02A0  2A9C               	goto	u945
  3636  02A1  3001               	movlw	1
  3637  02A2  0570               	andwf	??_Lcd_CharCP,w
  3638  02A3  00F1               	movwf	??_Lcd_CharCP+1
  3639  02A4  0807               	movf	7,w	;volatile
  3640  02A5  0671               	xorwf	??_Lcd_CharCP+1,w
  3641  02A6  39FE               	andlw	-2
  3642  02A7  0671               	xorwf	??_Lcd_CharCP+1,w
  3643  02A8  0087               	movwf	7	;volatile
  3644  02A9  0872               	movf	Lcd_CharCP@c,w
  3645  02AA  00F0               	movwf	??_Lcd_CharCP
  3646  02AB  3006               	movlw	6
  3647  02AC                     u955:
  3648  02AC  1003               	clrc
  3649  02AD  0CF0               	rrf	??_Lcd_CharCP,f
  3650  02AE  3EFF               	addlw	-1
  3651  02AF  1D03               	skipz
  3652  02B0  2AAC               	goto	u955
  3653  02B1  0870               	movf	??_Lcd_CharCP,w
  3654  02B2  3901               	andlw	1
  3655  02B3  00F1               	movwf	??_Lcd_CharCP+1
  3656  02B4  0DF1               	rlf	??_Lcd_CharCP+1,f
  3657  02B5  0807               	movf	7,w	;volatile
  3658  02B6  0671               	xorwf	??_Lcd_CharCP+1,w
  3659  02B7  39FD               	andlw	-3
  3660  02B8  0671               	xorwf	??_Lcd_CharCP+1,w
  3661  02B9  0087               	movwf	7	;volatile
  3662                           
  3663                           ;lcd_hd44780.c: 94: PORTCbits.RC2 = (unsigned char)((c & 0b00100000)>>5); PORTCbits.RC3 
      +                          = (unsigned char)((c & 0b00010000)>>4);
  3664  02BA  0872               	movf	Lcd_CharCP@c,w
  3665  02BB  00F0               	movwf	??_Lcd_CharCP
  3666  02BC  3005               	movlw	5
  3667  02BD                     u965:
  3668  02BD  1003               	clrc
  3669  02BE  0CF0               	rrf	??_Lcd_CharCP,f
  3670  02BF  3EFF               	addlw	-1
  3671  02C0  1D03               	skipz
  3672  02C1  2ABD               	goto	u965
  3673  02C2  0870               	movf	??_Lcd_CharCP,w
  3674  02C3  3901               	andlw	1
  3675  02C4  00F1               	movwf	??_Lcd_CharCP+1
  3676  02C5  0DF1               	rlf	??_Lcd_CharCP+1,f
  3677  02C6  0DF1               	rlf	??_Lcd_CharCP+1,f
  3678  02C7  0807               	movf	7,w	;volatile
  3679  02C8  0671               	xorwf	??_Lcd_CharCP+1,w
  3680  02C9  39FB               	andlw	-5
  3681  02CA  0671               	xorwf	??_Lcd_CharCP+1,w
  3682  02CB  0087               	movwf	7	;volatile
  3683  02CC  0872               	movf	Lcd_CharCP@c,w
  3684  02CD  00F0               	movwf	??_Lcd_CharCP
  3685  02CE  3004               	movlw	4
  3686  02CF                     u975:
  3687  02CF  1003               	clrc
  3688  02D0  0CF0               	rrf	??_Lcd_CharCP,f
  3689  02D1  3EFF               	addlw	-1
  3690  02D2  1D03               	skipz
  3691  02D3  2ACF               	goto	u975
  3692  02D4  0870               	movf	??_Lcd_CharCP,w
  3693  02D5  3901               	andlw	1
  3694  02D6  00F1               	movwf	??_Lcd_CharCP+1
  3695  02D7  0DF1               	rlf	??_Lcd_CharCP+1,f
  3696  02D8  0DF1               	rlf	??_Lcd_CharCP+1,f
  3697  02D9  0DF1               	rlf	??_Lcd_CharCP+1,f
  3698  02DA  0807               	movf	7,w	;volatile
  3699  02DB  0671               	xorwf	??_Lcd_CharCP+1,w
  3700  02DC  39F7               	andlw	-9
  3701  02DD  0671               	xorwf	??_Lcd_CharCP+1,w
  3702  02DE  0087               	movwf	7	;volatile
  3703                           
  3704                           ;lcd_hd44780.c: 96: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(20000000/4000000.0)))
      +                          ; PORTCbits.RC4 = 0;
  3705  02DF  1607               	bsf	7,4	;volatile
  3706  02E0  3008               	movlw	8
  3707  02E1  00F0               	movwf	??_Lcd_CharCP
  3708  02E2                     u1957:
  3709  02E2  0BF0               	decfsz	??_Lcd_CharCP,f
  3710  02E3  2AE2               	goto	u1957
  3711  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  3712  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  3713  02E6  1207               	bcf	7,4	;volatile
  3714                           
  3715                           ;lcd_hd44780.c: 97: PORTCbits.RC0 = (unsigned char)((c & 0b00001000)>>3); PORTCbits.RC1 
      +                          = (unsigned char)((c & 0b00000100)>>2);
  3716  02E7  0872               	movf	Lcd_CharCP@c,w
  3717  02E8  00F0               	movwf	??_Lcd_CharCP
  3718  02E9  3003               	movlw	3
  3719  02EA                     u985:
  3720  02EA  1003               	clrc
  3721  02EB  0CF0               	rrf	??_Lcd_CharCP,f
  3722  02EC  3EFF               	addlw	-1
  3723  02ED  1D03               	skipz
  3724  02EE  2AEA               	goto	u985
  3725  02EF  3001               	movlw	1
  3726  02F0  0570               	andwf	??_Lcd_CharCP,w
  3727  02F1  00F1               	movwf	??_Lcd_CharCP+1
  3728  02F2  0807               	movf	7,w	;volatile
  3729  02F3  0671               	xorwf	??_Lcd_CharCP+1,w
  3730  02F4  39FE               	andlw	-2
  3731  02F5  0671               	xorwf	??_Lcd_CharCP+1,w
  3732  02F6  0087               	movwf	7	;volatile
  3733  02F7  0872               	movf	Lcd_CharCP@c,w
  3734  02F8  00F0               	movwf	??_Lcd_CharCP
  3735  02F9  3002               	movlw	2
  3736  02FA                     u995:
  3737  02FA  1003               	clrc
  3738  02FB  0CF0               	rrf	??_Lcd_CharCP,f
  3739  02FC  3EFF               	addlw	-1
  3740  02FD  1D03               	skipz
  3741  02FE  2AFA               	goto	u995
  3742  02FF  0870               	movf	??_Lcd_CharCP,w
  3743  0300  3901               	andlw	1
  3744  0301  00F1               	movwf	??_Lcd_CharCP+1
  3745  0302  0DF1               	rlf	??_Lcd_CharCP+1,f
  3746  0303  0807               	movf	7,w	;volatile
  3747  0304  0671               	xorwf	??_Lcd_CharCP+1,w
  3748  0305  39FD               	andlw	-3
  3749  0306  0671               	xorwf	??_Lcd_CharCP+1,w
  3750  0307  0087               	movwf	7	;volatile
  3751                           
  3752                           ;lcd_hd44780.c: 98: PORTCbits.RC2 = (unsigned char)((c & 0b00000010)>>1); PORTCbits.RC3 
      +                          = (unsigned char)((c & 0b00000001));
  3753  0308  0872               	movf	Lcd_CharCP@c,w
  3754  0309  00F0               	movwf	??_Lcd_CharCP
  3755  030A  1003               	clrc
  3756  030B  0C70               	rrf	??_Lcd_CharCP,w
  3757  030C  3901               	andlw	1
  3758  030D  00F1               	movwf	??_Lcd_CharCP+1
  3759  030E  0DF1               	rlf	??_Lcd_CharCP+1,f
  3760  030F  0DF1               	rlf	??_Lcd_CharCP+1,f
  3761  0310  0807               	movf	7,w	;volatile
  3762  0311  0671               	xorwf	??_Lcd_CharCP+1,w
  3763  0312  39FB               	andlw	-5
  3764  0313  0671               	xorwf	??_Lcd_CharCP+1,w
  3765  0314  0087               	movwf	7	;volatile
  3766  0315  0872               	movf	Lcd_CharCP@c,w
  3767  0316  3901               	andlw	1
  3768  0317  00F0               	movwf	??_Lcd_CharCP
  3769  0318  0DF0               	rlf	??_Lcd_CharCP,f
  3770  0319  0DF0               	rlf	??_Lcd_CharCP,f
  3771  031A  0DF0               	rlf	??_Lcd_CharCP,f
  3772  031B  0807               	movf	7,w	;volatile
  3773  031C  0670               	xorwf	??_Lcd_CharCP,w
  3774  031D  39F7               	andlw	-9
  3775  031E  0670               	xorwf	??_Lcd_CharCP,w
  3776  031F  0087               	movwf	7	;volatile
  3777                           
  3778                           ;lcd_hd44780.c: 100: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(20000000/4000000.0))
      +                          ); PORTCbits.RC4 = 0;
  3779  0320  1607               	bsf	7,4	;volatile
  3780  0321  3008               	movlw	8
  3781  0322  00F0               	movwf	??_Lcd_CharCP
  3782  0323                     u1967:
  3783  0323  0BF0               	decfsz	??_Lcd_CharCP,f
  3784  0324  2B23               	goto	u1967
  3785  0325  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0326  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0327  1207               	bcf	7,4	;volatile
  3788                           
  3789                           ;lcd_hd44780.c: 101: _delay((unsigned long)((5)*(20000000/4000000.0))); _delay((unsigned
      +                           long)((5500)*(20000000/4000000.0)));
  3790  0328  3008               	movlw	8
  3791  0329  00F0               	movwf	??_Lcd_CharCP
  3792  032A                     u1977:
  3793  032A  0BF0               	decfsz	??_Lcd_CharCP,f
  3794  032B  2B2A               	goto	u1977
  3795  032C  3024               	movlw	36
  3796  032D  00F1               	movwf	??_Lcd_CharCP+1
  3797  032E  30B5               	movlw	181
  3798  032F  00F0               	movwf	??_Lcd_CharCP
  3799  0330                     u1987:
  3800  0330  0BF0               	decfsz	??_Lcd_CharCP,f
  3801  0331  2B30               	goto	u1987
  3802  0332  0BF1               	decfsz	??_Lcd_CharCP+1,f
  3803  0333  2B30               	goto	u1987
  3804  0334  2B35               	nop2
  3805  0335  0008               	return
  3806  0336                     __end_of_Lcd_CharCP:
  3807  007E                     btemp	set	126	;btemp
  3808  007E                     wtemp0	set	126
  3809                           
  3810                           	psect	config
  3811                           
  3812                           ;Config register CONFIG @ 0x2007
  3813                           ;	Oscillator Selection bits
  3814                           ;	FOSC = HS, HS oscillator
  3815                           ;	Watchdog Timer Enable bit
  3816                           ;	WDTE = OFF, WDT disabled
  3817                           ;	Power-up Timer Enable bit
  3818                           ;	PWRTE = OFF, PWRT disabled
  3819                           ;	Brown-out Reset Enable bit
  3820                           ;	BOREN = ON, BOR enabled
  3821                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3822                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3823                           ;	Data EEPROM Memory Code Protection bit
  3824                           ;	CPD = OFF, Data EEPROM code protection off
  3825                           ;	Flash Program Memory Write Enable bits
  3826                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3827                           ;	In-Circuit Debugger Mode bit
  3828                           ;	DEBUG = 0x1, unprogrammed default
  3829                           ;	Flash Program Memory Code Protection bit
  3830                           ;	CP = OFF, Code protection off
  3831  2007                     	org	8199
  3832  2007  3FFA               	dw	16378

Data Sizes:
    Strings     76
    Constant    10
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> TIEM(BANK0[6]), SEN2(BANK0[6]), SEN1(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_ConstText@buffer	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_12(CODE[10]), STR_11(CODE[14]), STR_10(CODE[11]), TIEM(BANK0[6]), 
		 -> STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[6]), SEN2(BANK0[6]), 
		 -> SEN1(BANK0[6]), STR_2(CODE[8]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_search_channel
    _search_channel->___awtoft
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _INI->_Lcd_ConstText
    _Lcd_Init->_Lcd_Command
    _Lcd_ConstText->_Lcd_CharCP
    _Lcd_ConstText->_Lcd_Command

Critical Paths under _main in BANK0

    _main->_search_channel
    _search_channel->___ftdiv
    ___fttol->___ftmul
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   16574
                                             32 BANK0      7     7      0
                                _INI
                        _Lcd_Command
                      _Lcd_ConstText
                     _search_channel
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _search_channel                                       4     2      2   10292
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1430
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     380
                                             15 BANK0     13     9      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3049
                                              0 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2747
                                             15 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2492
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2337
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _INI                                                  3     3      0    2559
                                              8 COMMON     3     3      0
                        _Lcd_Command
                      _Lcd_ConstText
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             3     3      0     314
                                              3 COMMON     3     3      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_ConstText                                        5     2      3    2069
                                              3 COMMON     5     2      3
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_CharCP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI
     _Lcd_Command
     _Lcd_ConstText
       _Lcd_CharCP
       _Lcd_Command
     _Lcd_Init
       _Lcd_Command
   _Lcd_Command
   _Lcd_ConstText
     _Lcd_CharCP
     _Lcd_Command
   _search_channel
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5A      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Nov 26 04:08:30 2020

                      pc 0002                       l60 049F                       l83 0763  
                     l85 0787                       l87 079C                       l89 07C0  
                     fsr 0004                      l105 037C                      _ADC 0058  
                    l470 00CC                      l553 013A                      l469 00C4  
                    _INI 0F71                      u905 0221                      u915 0233  
                    u925 024E                      u935 025E                      u945 029C  
                    u955 02AC                      u965 02BD                      u885 0200  
                    u975 02CF                      u895 0210                      u985 02EA  
                    u995 02FA                      fsr0 0004                      indf 0000  
    __end_of_Lcd_Command 0296                     ?_INI 0070             ___ftdiv@cntr 0038  
           ___ftdiv@sign 003D                     l1403 0F61                     l1501 0FC9  
                   l1421 0F17                     l1503 0FD7                     l1407 0F6C  
                   l1361 0094                     l1353 0081                     l1425 0F25  
                   l1363 0099                     l1611 01B5                     l1419 0F09  
                   l1509 0FDD                     l1373 00C2                     l1357 0088  
                   l1429 0F30                     l1541 05AB                     l1525 0592  
                   l1375 00B4                     l1631 03F7                     l1535 05A9  
                   l1519 057C                     l1369 00AF                     l1617 01D4  
                   l1721 0157                     l1705 0126                     l1491 0FBA  
                   l1395 0F3D                     l1563 05DF                     l1555 05DB  
                   l1493 0FBD                     l1637 040D                     l1717 0149  
                   l1709 0136                     l1397 0F4B                     l1549 05CC  
                   l1565 055C                     l1805 0682                     l1495 0FC0  
                   l1671 0468                     l1655 0430                     l1567 061E  
                   l1823 06DE                     l1497 0FC3                     l1833 070D  
                   l1809 06A0                     l1579 0EEC                     l1595 018C  
                   l1667 0458                     l1659 0440                     l1683 00F4  
                   l1771 0525                     l1843 078A                     l1827 06F4  
                   l1819 06C2                     l1589 0176                     l1687 00FD  
                   l1785 0629                     l1891 07E4                     l1795 0657  
                   l1779 07C3                     STR_1 002B                     STR_2 0054  
                   STR_3 0066                     STR_4 0066                     STR_5 005C  
                   STR_6 004C                     STR_7 0062                     STR_8 0066  
                   STR_9 0066                     u1105 00D3                     u1025 008D  
                   u1045 00A8                     u1205 0F0C                     u1135 0F40  
                   u1065 00BB                     u1225 0F1D                     u1155 0F4C  
                   u1235 0F26                     u1165 0F58                     u1175 0F62  
                   u1505 0469                     u1515 0471                     u1605 013F  
                   u1375 01B6                     u1455 0441                     u1295 05C2  
                   u1385 01C7                     u1465 0449                     u1545 0104  
                   u1395 01D5                     u1715 075C                     u1725 076D  
                   u1575 0127                     u1807 0499                     u1735 0795  
                   u1817 0FA4                     u1745 07A6                     u1907 03B7  
                   u1827 0348                     u1675 067C                     u1917 03C5  
                   u1837 0351                     u1757 0663                     u1927 0246  
                   u1847 035A                     u1767 06AC                     u1937 0287  
                   u1857 0363                     u1777 06EA                     u1947 0290  
                   u1867 036C                     u1787 0777                     u1957 02E2  
                   u1877 0375                     u1797 07B0                     u1967 0323  
                   u1887 038C                     u1977 032A                     u1897 039A  
                   u1987 0330                     _SEN1 0066                     _SEN2 0060  
                   _TIEM 005A           _search_channel 0494                     _main 0623  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     btemp 007E  
                   start 0000             ___ftmul@cntr 002D             ___ftmul@sign 002E  
             _Lcd_CharCP 0296                    ??_INI 0078             ___fttol@exp1 003B  
           ___fttol@lval 0037                    ?_main 0070                    STR_10 0037  
                  STR_11 001D                    STR_12 0042          __end_of___ftdiv 01F8  
        __end_of___ftmul 0494          __end_of___fttol 0160          __end_of___lwdiv 0F71  
        __end_of___lwmod 0F35                    _TRISB 0086                    _TRISD 0088  
                  _nRBPU 040F            ___awtoft@sign 007B          __end_of_dpowers 001D  
 __end_of_search_channel 0557            ___ftpack@sign 0074                    main@i 0043  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0623         __end_of_Lcd_Init 03E1          __initialization 07F5  
           __end_of_main 07F5    __end_of_Lcd_ConstText 1000              _Lcd_Command 01F8  
                 ??_main 0040            ___fttol@sign1 0036                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
        ?_search_channel 003E         __end_of___awtoft 0F03         __end_of___ftpack 00E5  
                 _ESTADO 0052                   _TIEMPO 0050              ?_Lcd_CharCP 0070  
              ??___ftdiv 0035                ??___ftmul 0026                ??___fttol 0033  
              ??___lwdiv 0074                ??___lwmod 007B    ___ftmul@f3_as_product 002A  
              ??_sprintf 0023       Lcd_Command@command 0072  __end_of__initialization 07FC  
             ___ftdiv@f1 0032               ___ftdiv@f2 002F               ___ftdiv@f3 0039  
             ___awtoft@c 0078               ___ftmul@f1 0020               ___ftmul@f2 0023  
             ___fttol@f1 002F           __pcstackCOMMON 0070                ?_Lcd_Init 0070  
    __size_of_Lcd_CharCP 00A0               __pbssBANK0 0047               __pmaintext 0623  
              ?___awtoft 0078                ?___ftpack 0070                  _SENSOR1 0056  
                _SENSOR2 0054               ??_Lcd_Init 0073                  _VOLTAJE 0047  
             __stringtab 0003                  ___ftdiv 0160                  ___ftmul 03E1  
                ___fttol 00E5                  ___lwdiv 0F35                  ___lwmod 0F03  
             ??___awtoft 007B               ??___ftpack 0075             ?_Lcd_Command 0070  
                __ptext1 0494                  __ptext2 0557                  __ptext3 0F03  
                __ptext4 0F35                  __ptext5 00E5                  __ptext6 03E1  
                __ptext7 0160                  __ptext8 0EE2                  __ptext9 0079  
           __size_of_INI 0047                  _dpowers 0013         ??_search_channel 007C  
                _sprintf 0557                  clrloop0 0072     end_of_initialization 07FC  
    Lcd_ConstText@buffer 0074             ??_Lcd_CharCP 0070                _PORTBbits 0006  
              _PORTCbits 0007                _PORTDbits 0008                _TRISCbits 0087  
     __end_of_Lcd_CharCP 0336   __size_of_Lcd_ConstText 0048              ___ftdiv@exp 003C  
            ___ftmul@exp 0029    search_channel@channel 003E      start_initialization 07F5  
            __end_of_INI 0FB8        __size_of_Lcd_Init 00AB            _Lcd_ConstText 0FB8  
      __size_of___awtoft 0021        __size_of___ftpack 006C     __size_of_Lcd_Command 009E  
              ___latbits 0002            __pcstackBANK0 0020              sprintf@flag 0027  
            sprintf@prec 0028         ___lwdiv@dividend 0072           ?_Lcd_ConstText 0073  
               ?___ftdiv 002F                 ?___ftmul 0020                 ?___fttol 002F  
               ?___lwdiv 0070                 ?___lwmod 0077                __pstrings 0003  
       ___lwdiv@quotient 0074                 ?_sprintf 0020                clear_ram0 0071  
       _Boton_Decremento 004C             Lcd_Init@data 0075               _ADCON0bits 001F  
            __stringbase 0012                main@i_208 0045                 _Lcd_Init 0336  
        ??_Lcd_ConstText 0076         __size_of___ftdiv 0098         __size_of___ftmul 00B3  
       __size_of___fttol 007B         __size_of___lwdiv 003C         __size_of___lwmod 0032  
               ___awtoft 0EE2                 ___ftpack 0079       __end_of__stringtab 0013  
             sprintf@val 0029          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 0F71                 __ptext11 0336                 __ptext12 0FB8  
               __ptext13 01F8                 __ptext14 0296            _Boton_Aceptar 004A  
       __size_of_sprintf 00CC            _Boton_Aumento 004E              Lcd_CharCP@c 0072  
__size_of_search_channel 00C3            __size_of_main 01D2        Lcd_ConstText@data 0077  
              sprintf@ap 0026                sprintf@sp 002B         ___lwmod@dividend 0079  
              stringcode 000D            ??_Lcd_Command 0070                 sprintf@c 002C  
               sprintf@f 0020          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 000D                 stringtab 0003           Lcd_ConstText@x 0073  
         Lcd_ConstText@y 0076  
